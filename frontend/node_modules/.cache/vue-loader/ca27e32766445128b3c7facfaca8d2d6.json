{"remainingRequest":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lq/ifb/src/eshop/frontend/src/components/prompts/Delete.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lq/ifb/src/eshop/frontend/src/components/prompts/Delete.vue","mtime":1583132470976},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwR2V0dGVycywgbWFwTXV0YXRpb25zLCBtYXBTdGF0ZX0gZnJvbSAndnVleCcKaW1wb3J0IHsgZmlsZXMgYXMgYXBpIH0gZnJvbSAnQC9hcGknCmltcG9ydCB1cmwgZnJvbSAnQC91dGlscy91cmwnCmltcG9ydCBidXR0b25zIGZyb20gJ0AvdXRpbHMvYnV0dG9ucycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnZGVsZXRlJywKICBjb21wdXRlZDogewogICAgLi4ubWFwR2V0dGVycyhbJ2lzTGlzdGluZycsICdzZWxlY3RlZENvdW50J10pLAogICAgLi4ubWFwU3RhdGUoWydyZXEnLCAnc2VsZWN0ZWQnXSkKICB9LAogIG1ldGhvZHM6IHsKICAgIC4uLm1hcE11dGF0aW9ucyhbJ2Nsb3NlSG92ZXJzJ10pLAogICAgc3VibWl0OiBhc3luYyBmdW5jdGlvbiAoKSB7CiAgICAgIHRoaXMuY2xvc2VIb3ZlcnMoKQogICAgICBidXR0b25zLmxvYWRpbmcoJ2RlbGV0ZScpCgogICAgICB0cnkgewogICAgICAgIGlmICghdGhpcy5pc0xpc3RpbmcpIHsKICAgICAgICAgIGF3YWl0IGFwaS5yZW1vdmUodGhpcy4kcm91dGUucGF0aCkKICAgICAgICAgIGJ1dHRvbnMuc3VjY2VzcygnZGVsZXRlJykKICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgcGF0aDogdXJsLnJlbW92ZUxhc3REaXIodGhpcy4kcm91dGUucGF0aCkgKyAnLycgfSkKICAgICAgICAgIHJldHVybgogICAgICAgIH0KCiAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRDb3VudCA9PT0gMCkgewogICAgICAgICAgcmV0dXJuCiAgICAgICAgfQoKICAgICAgICBsZXQgcHJvbWlzZXMgPSBbXQogICAgICAgIGZvciAobGV0IGluZGV4IG9mIHRoaXMuc2VsZWN0ZWQpIHsKICAgICAgICAgIHByb21pc2VzLnB1c2goYXBpLnJlbW92ZSh0aGlzLnJlcS5pdGVtc1tpbmRleF0udXJsKSkKICAgICAgICB9CgogICAgICAgIGF3YWl0IFByb21pc2UuYWxsKHByb21pc2VzKQogICAgICAgIGJ1dHRvbnMuc3VjY2VzcygnZGVsZXRlJykKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3NldFJlbG9hZCcsIHRydWUpCiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBidXR0b25zLmRvbmUoJ2RlbGV0ZScpCiAgICAgICAgdGhpcy4kc2hvd0Vycm9yKGUpCiAgICAgICAgaWYgKHRoaXMuaXNMaXN0aW5nKSB0aGlzLiRzdG9yZS5jb21taXQoJ3NldFJlbG9hZCcsIHRydWUpCiAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["Delete.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Delete.vue","sourceRoot":"src/components/prompts","sourcesContent":["<template>\n  <div class=\"card floating\">\n    <div class=\"card-content\">\n      <p v-if=\"req.kind !== 'listing'\">{{ $t('prompts.deleteMessageSingle') }}</p>\n      <p v-else>{{ $t('prompts.deleteMessageMultiple', { count: selectedCount}) }}</p>\n    </div>\n    <div class=\"card-action\">\n      <button @click=\"$store.commit('closeHovers')\"\n        class=\"button button--flat button--grey\"\n        :aria-label=\"$t('buttons.cancel')\"\n        :title=\"$t('buttons.cancel')\">{{ $t('buttons.cancel') }}</button>\n      <button @click=\"submit\"\n        class=\"button button--flat button--red\"\n        :aria-label=\"$t('buttons.delete')\"\n        :title=\"$t('buttons.delete')\">{{ $t('buttons.delete') }}</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {mapGetters, mapMutations, mapState} from 'vuex'\nimport { files as api } from '@/api'\nimport url from '@/utils/url'\nimport buttons from '@/utils/buttons'\n\nexport default {\n  name: 'delete',\n  computed: {\n    ...mapGetters(['isListing', 'selectedCount']),\n    ...mapState(['req', 'selected'])\n  },\n  methods: {\n    ...mapMutations(['closeHovers']),\n    submit: async function () {\n      this.closeHovers()\n      buttons.loading('delete')\n\n      try {\n        if (!this.isListing) {\n          await api.remove(this.$route.path)\n          buttons.success('delete')\n          this.$router.push({ path: url.removeLastDir(this.$route.path) + '/' })\n          return\n        }\n\n        if (this.selectedCount === 0) {\n          return\n        }\n\n        let promises = []\n        for (let index of this.selected) {\n          promises.push(api.remove(this.req.items[index].url))\n        }\n\n        await Promise.all(promises)\n        buttons.success('delete')\n        this.$store.commit('setReload', true)\n      } catch (e) {\n        buttons.done('delete')\n        this.$showError(e)\n        if (this.isListing) this.$store.commit('setReload', true)\n      }\n    }\n  }\n}\n</script>\n"]}]}