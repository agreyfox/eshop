{"remainingRequest":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lq/ifb/src/eshop/frontend/src/components/buttons/SwitchView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lq/ifb/src/eshop/frontend/src/components/buttons/SwitchView.vue","mtime":1583132470972},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlLCBtYXBNdXRhdGlvbnMgfSBmcm9tICd2dWV4JwppbXBvcnQgeyB1c2VycyBhcyBhcGkgfSBmcm9tICdAL2FwaScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnc3dpdGNoLWJ1dHRvbicsCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcFN0YXRlKFsndXNlciddKSwKICAgIGljb246IGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKHRoaXMudXNlci52aWV3TW9kZSA9PT0gJ21vc2FpYycpIHJldHVybiAndmlld19saXN0JwogICAgICByZXR1cm4gJ3ZpZXdfbW9kdWxlJwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLi4ubWFwTXV0YXRpb25zKFsgJ3VwZGF0ZVVzZXInLCAnY2xvc2VIb3ZlcnMnIF0pLAogICAgY2hhbmdlOiBhc3luYyBmdW5jdGlvbiAoKSB7CiAgICAgIHRoaXMuY2xvc2VIb3ZlcnMoKQoKICAgICAgY29uc3QgZGF0YSA9IHsKICAgICAgICBpZDogdGhpcy51c2VyLmlkLAogICAgICAgIHZpZXdNb2RlOiAodGhpcy5pY29uID09PSAndmlld19saXN0JykgPyAnbGlzdCcgOiAnbW9zYWljJwogICAgICB9CgogICAgICB0cnkgewogICAgICAgIGF3YWl0IGFwaS51cGRhdGUoZGF0YSwgWyd2aWV3TW9kZSddKQogICAgICAgIHRoaXMudXBkYXRlVXNlcihkYXRhKQogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgdGhpcy4kc2hvd0Vycm9yKGUpCiAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["SwitchView.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SwitchView.vue","sourceRoot":"src/components/buttons","sourcesContent":["<template>\n  <button @click=\"change\" :aria-label=\"$t('buttons.switchView')\" :title=\"$t('buttons.switchView')\" class=\"action\" id=\"switch-view-button\">\n    <i class=\"material-icons\">{{ icon }}</i>\n    <span>{{ $t('buttons.switchView') }}</span>\n  </button>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex'\nimport { users as api } from '@/api'\n\nexport default {\n  name: 'switch-button',\n  computed: {\n    ...mapState(['user']),\n    icon: function () {\n      if (this.user.viewMode === 'mosaic') return 'view_list'\n      return 'view_module'\n    }\n  },\n  methods: {\n    ...mapMutations([ 'updateUser', 'closeHovers' ]),\n    change: async function () {\n      this.closeHovers()\n\n      const data = {\n        id: this.user.id,\n        viewMode: (this.icon === 'view_list') ? 'list' : 'mosaic'\n      }\n\n      try {\n        await api.update(data, ['viewMode'])\n        this.updateUser(data)\n      } catch (e) {\n        this.$showError(e)\n      }\n    }\n  }\n}\n</script>\n"]}]}