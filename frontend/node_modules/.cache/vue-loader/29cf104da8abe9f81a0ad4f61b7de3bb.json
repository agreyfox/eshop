{"remainingRequest":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lq/ifb/src/eshop/frontend/src/views/settings/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lq/ifb/src/eshop/frontend/src/views/settings/Profile.vue","mtime":1583132470984},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlLCBtYXBNdXRhdGlvbnMgfSBmcm9tICd2dWV4JwppbXBvcnQgeyB1c2VycyBhcyBhcGkgfSBmcm9tICdAL2FwaScKaW1wb3J0IExhbmd1YWdlcyBmcm9tICdAL2NvbXBvbmVudHMvc2V0dGluZ3MvTGFuZ3VhZ2VzJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdzZXR0aW5ncycsCiAgY29tcG9uZW50czogewogICAgTGFuZ3VhZ2VzCiAgfSwKICBkYXRhOiBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gewogICAgICBwYXNzd29yZDogJycsCiAgICAgIHBhc3N3b3JkQ29uZjogJycsCiAgICAgIGxvY2FsZTogJycKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBTdGF0ZShbICd1c2VyJyBdKSwKICAgIHBhc3N3b3JkQ2xhc3MgKCkgewogICAgICBjb25zdCBiYXNlQ2xhc3MgPSAnaW5wdXQgaW5wdXQtLWJsb2NrJwoKICAgICAgaWYgKHRoaXMucGFzc3dvcmQgPT09ICcnICYmIHRoaXMucGFzc3dvcmRDb25mID09PSAnJykgewogICAgICAgIHJldHVybiBiYXNlQ2xhc3MKICAgICAgfQoKICAgICAgaWYgKHRoaXMucGFzc3dvcmQgPT09IHRoaXMucGFzc3dvcmRDb25mKSB7CiAgICAgICAgcmV0dXJuIGAke2Jhc2VDbGFzc30gaW5wdXQtLWdyZWVuYAogICAgICB9CgogICAgICByZXR1cm4gYCR7YmFzZUNsYXNzfSBpbnB1dC0tcmVkYAogICAgfQogIH0sCiAgY3JlYXRlZCAoKSB7CiAgICB0aGlzLmxvY2FsZSA9IHRoaXMudXNlci5sb2NhbGUKICB9LAogIG1ldGhvZHM6IHsKICAgIC4uLm1hcE11dGF0aW9ucyhbICd1cGRhdGVVc2VyJyBdKSwKICAgIGFzeW5jIHVwZGF0ZVBhc3N3b3JkIChldmVudCkgewogICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpCgogICAgICBpZiAodGhpcy5wYXNzd29yZCAhPT0gdGhpcy5wYXNzd29yZENvbmYgfHwgdGhpcy5wYXNzd29yZCA9PT0gJycpIHsKICAgICAgICByZXR1cm4KICAgICAgfQoKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCBkYXRhID0geyBpZDogdGhpcy51c2VyLmlkLCBwYXNzd29yZDogdGhpcy5wYXNzd29yZCB9CiAgICAgICAgYXdhaXQgYXBpLnVwZGF0ZShkYXRhLCBbJ3Bhc3N3b3JkJ10pCiAgICAgICAgdGhpcy51cGRhdGVVc2VyKGRhdGEpCiAgICAgICAgdGhpcy4kc2hvd1N1Y2Nlc3ModGhpcy4kdCgnc2V0dGluZ3MucGFzc3dvcmRVcGRhdGVkJykpCiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICB0aGlzLiRzaG93RXJyb3IoZSkKICAgICAgfQogICAgfSwKICAgIGFzeW5jIHVwZGF0ZVNldHRpbmdzIChldmVudCkgewogICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpCgogICAgICB0cnkgewogICAgICAgIGNvbnN0IGRhdGEgPSB7IGlkOiB0aGlzLnVzZXIuaWQsIGxvY2FsZTogdGhpcy5sb2NhbGUgfQogICAgICAgIGF3YWl0IGFwaS51cGRhdGUoZGF0YSwgWydsb2NhbGUnXSkKICAgICAgICB0aGlzLnVwZGF0ZVVzZXIoZGF0YSkKICAgICAgICB0aGlzLiRzaG93U3VjY2Vzcyh0aGlzLiR0KCdzZXR0aW5ncy5zZXR0aW5nc1VwZGF0ZWQnKSkKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIHRoaXMuJHNob3dFcnJvcihlKQogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Profile.vue","sourceRoot":"src/views/settings","sourcesContent":["<template>\n  <div class=\"dashboard\">\n     <form class=\"card\" @submit=\"updateSettings\">\n      <div class=\"card-title\">\n        <h2>{{ $t('settings.profileSettings') }}</h2>\n      </div>\n\n      <div class=\"card-content\">\n        <h3>{{ $t('settings.language') }}</h3>\n        <languages class=\"input input--block\" :locale.sync=\"locale\"></languages>\n      </div>\n\n      <div class=\"card-action\">\n        <input class=\"button button--flat\" type=\"submit\" :value=\"$t('buttons.update')\">\n      </div>\n    </form>\n\n    <form class=\"card\" v-if=\"!user.lockPassword\" @submit=\"updatePassword\">\n      <div class=\"card-title\">\n        <h2>{{ $t('settings.changePassword') }}</h2>\n      </div>\n\n      <div class=\"card-content\">\n        <input :class=\"passwordClass\" type=\"password\" :placeholder=\"$t('settings.newPassword')\" v-model=\"password\" name=\"password\">\n        <input :class=\"passwordClass\" type=\"password\" :placeholder=\"$t('settings.newPasswordConfirm')\" v-model=\"passwordConf\" name=\"password\">\n      </div>\n\n      <div class=\"card-action\">\n        <input class=\"button button--flat\" type=\"submit\" :value=\"$t('buttons.update')\">\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex'\nimport { users as api } from '@/api'\nimport Languages from '@/components/settings/Languages'\n\nexport default {\n  name: 'settings',\n  components: {\n    Languages\n  },\n  data: function () {\n    return {\n      password: '',\n      passwordConf: '',\n      locale: ''\n    }\n  },\n  computed: {\n    ...mapState([ 'user' ]),\n    passwordClass () {\n      const baseClass = 'input input--block'\n\n      if (this.password === '' && this.passwordConf === '') {\n        return baseClass\n      }\n\n      if (this.password === this.passwordConf) {\n        return `${baseClass} input--green`\n      }\n\n      return `${baseClass} input--red`\n    }\n  },\n  created () {\n    this.locale = this.user.locale\n  },\n  methods: {\n    ...mapMutations([ 'updateUser' ]),\n    async updatePassword (event) {\n      event.preventDefault()\n\n      if (this.password !== this.passwordConf || this.password === '') {\n        return\n      }\n\n      try {\n        const data = { id: this.user.id, password: this.password }\n        await api.update(data, ['password'])\n        this.updateUser(data)\n        this.$showSuccess(this.$t('settings.passwordUpdated'))\n      } catch (e) {\n        this.$showError(e)\n      }\n    },\n    async updateSettings (event) {\n      event.preventDefault()\n\n      try {\n        const data = { id: this.user.id, locale: this.locale }\n        await api.update(data, ['locale'])\n        this.updateUser(data)\n        this.$showSuccess(this.$t('settings.settingsUpdated'))\n      } catch (e) {\n        this.$showError(e)\n      }\n    }\n  }\n}\n</script>\n"]}]}