{"remainingRequest":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lq/ifb/src/eshop/frontend/src/components/prompts/NewDir.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lq/ifb/src/eshop/frontend/src/components/prompts/NewDir.vue","mtime":1583132470976},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JwppbXBvcnQgeyBmaWxlcyBhcyBhcGkgfSBmcm9tICdAL2FwaScKaW1wb3J0IHVybCBmcm9tICdAL3V0aWxzL3VybCcKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnbmV3LWRpcicsCiAgZGF0YTogZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gewogICAgICBuYW1lOiAnJwogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKFsgJ2lzRmlsZXMnLCAnaXNMaXN0aW5nJyBdKQogIH0sCiAgbWV0aG9kczogewogICAgc3VibWl0OiBhc3luYyBmdW5jdGlvbihldmVudCkgewogICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpCiAgICAgIGlmICh0aGlzLm5ldyA9PT0gJycpIHJldHVybgoKICAgICAgLy8gQnVpbGQgdGhlIHBhdGggb2YgdGhlIG5ldyBkaXJlY3RvcnkuCiAgICAgIGxldCB1cmkgPSB0aGlzLmlzRmlsZXMgPyB0aGlzLiRyb3V0ZS5wYXRoICsgJy8nIDogJy8nCgogICAgICBpZiAoIXRoaXMuaXNMaXN0aW5nKSB7CiAgICAgICAgdXJpID0gdXJsLnJlbW92ZUxhc3REaXIodXJpKSArICcvJwogICAgICB9CgogICAgICB1cmkgKz0gZW5jb2RlVVJJQ29tcG9uZW50KHRoaXMubmFtZSkgKyAnLycKICAgICAgdXJpID0gdXJpLnJlcGxhY2UoJy8vJywgJy8nKQoKICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCBhcGkucG9zdCh1cmkpCiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBwYXRoOiB1cmkgfSkKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIHRoaXMuJHNob3dFcnJvcihlKQogICAgICB9CgogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2Nsb3NlSG92ZXJzJykKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["NewDir.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"NewDir.vue","sourceRoot":"src/components/prompts","sourcesContent":["<template>\n  <div class=\"card floating\">\n    <div class=\"card-title\">\n      <h2>{{ $t('prompts.newDir') }}</h2>\n    </div>\n\n    <div class=\"card-content\">\n      <p>{{ $t('prompts.newDirMessage') }}</p>\n      <input class=\"input input--block\" type=\"text\" @keyup.enter=\"submit\" v-model.trim=\"name\" v-focus>\n    </div>\n\n    <div class=\"card-action\">\n      <button\n        class=\"button button--flat button--grey\"\n        @click=\"$store.commit('closeHovers')\"\n        :aria-label=\"$t('buttons.cancel')\"\n        :title=\"$t('buttons.cancel')\"\n      >{{ $t('buttons.cancel') }}</button>\n      <button\n        class=\"button button--flat\"\n        :aria-label=\"$t('buttons.create')\"\n        :title=\"$t('buttons.create')\"\n        @click=\"submit\"\n      >{{ $t('buttons.create') }}</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport { files as api } from '@/api'\nimport url from '@/utils/url'\n\nexport default {\n  name: 'new-dir',\n  data: function() {\n    return {\n      name: ''\n    };\n  },\n  computed: {\n    ...mapGetters([ 'isFiles', 'isListing' ])\n  },\n  methods: {\n    submit: async function(event) {\n      event.preventDefault()\n      if (this.new === '') return\n\n      // Build the path of the new directory.\n      let uri = this.isFiles ? this.$route.path + '/' : '/'\n\n      if (!this.isListing) {\n        uri = url.removeLastDir(uri) + '/'\n      }\n\n      uri += encodeURIComponent(this.name) + '/'\n      uri = uri.replace('//', '/')\n\n      try {\n        await api.post(uri)\n        this.$router.push({ path: uri })\n      } catch (e) {\n        this.$showError(e)\n      }\n\n      this.$store.commit('closeHovers')\n    }\n  }\n};\n</script>\n\n"]}]}