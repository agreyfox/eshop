{"remainingRequest":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lq/ifb/src/eshop/frontend/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lq/ifb/src/eshop/frontend/src/views/Login.vue","mtime":1585553815963},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGF1dGggZnJvbSAiQC91dGlscy9hdXRoIjsKaW1wb3J0IHsKICBuYW1lLAogIGxvZ29VUkwsCiAgcmVjYXB0Y2hhLAogIHJlY2FwdGNoYUtleSwKICBzaWdudXAKfSBmcm9tICJAL3V0aWxzL2NvbnN0YW50cyI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImxvZ2luIiwKICBjb21wdXRlZDogewogICAgc2lnbnVwOiAoKSA9PiBzaWdudXAsCiAgICBuYW1lOiAoKSA9PiBuYW1lLAogICAgbG9nb1VSTDogKCkgPT4gbG9nb1VSTAogIH0sCiAgZGF0YTogZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gewogICAgICBjcmVhdGVNb2RlOiBmYWxzZSwKICAgICAgZXJyb3I6ICIiLAogICAgICB1c2VybmFtZTogIiIsCiAgICAgIHBhc3N3b3JkOiAiIiwKICAgICAgcmVjYXB0Y2hhOiByZWNhcHRjaGEsCiAgICAgIHBhc3N3b3JkQ29uZmlybTogIiIKICAgIH07CiAgfSwKICBtb3VudGVkKCkgewogICAgaWYgKCFyZWNhcHRjaGEpIHJldHVybjsKCiAgICB3aW5kb3cuZ3JlY2FwdGNoYS5yZW5kZXIoInJlY2FwdGNoYSIsIHsKICAgICAgc2l0ZWtleTogcmVjYXB0Y2hhS2V5CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHRvZ2dsZU1vZGUoKSB7CiAgICAgIHRoaXMuY3JlYXRlTW9kZSA9ICF0aGlzLmNyZWF0ZU1vZGU7CiAgICB9LAogICAgYXN5bmMgc3VibWl0KGV2ZW50KSB7CiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwoKICAgICAgbGV0IHJlZGlyZWN0ID0gdGhpcy4kcm91dGUucXVlcnkucmVkaXJlY3Q7CiAgICAgIGlmIChyZWRpcmVjdCA9PT0gIiIgfHwgcmVkaXJlY3QgPT09IHVuZGVmaW5lZCB8fCByZWRpcmVjdCA9PT0gbnVsbCkgewogICAgICAgIHJlZGlyZWN0ID0gIi9maWxlcy8iOwogICAgICB9CgogICAgICBsZXQgY2FwdGNoYSA9ICIiOwogICAgICBpZiAocmVjYXB0Y2hhKSB7CiAgICAgICAgY2FwdGNoYSA9IHdpbmRvdy5ncmVjYXB0Y2hhLmdldFJlc3BvbnNlKCk7CgogICAgICAgIGlmIChjYXB0Y2hhID09PSAiIikgewogICAgICAgICAgdGhpcy5lcnJvciA9IHRoaXMuJHQoImxvZ2luLndyb25nQ3JlZGVudGlhbHMiKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmNyZWF0ZU1vZGUpIHsKICAgICAgICBpZiAodGhpcy5wYXNzd29yZCAhPT0gdGhpcy5wYXNzd29yZENvbmZpcm0pIHsKICAgICAgICAgIHRoaXMuZXJyb3IgPSB0aGlzLiR0KCJsb2dpbi5wYXNzd29yZHNEb250TWF0Y2giKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRyeSB7CiAgICAgICAgaWYgKHRoaXMuY3JlYXRlTW9kZSkgewogICAgICAgICAgYXdhaXQgYXV0aC5zaWdudXAodGhpcy51c2VybmFtZSwgdGhpcy5wYXNzd29yZCk7CiAgICAgICAgfQoKICAgICAgICBhd2FpdCBhdXRoLmxvZ2luKHRoaXMudXNlcm5hbWUsIHRoaXMucGFzc3dvcmQsIGNhcHRjaGEpOwogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgcGF0aDogcmVkaXJlY3QgfSk7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBpZiAoZS5tZXNzYWdlID09IDQwOSkgewogICAgICAgICAgdGhpcy5lcnJvciA9IHRoaXMuJHQoImxvZ2luLnVzZXJuYW1lVGFrZW4iKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5lcnJvciA9IHRoaXMuJHQoImxvZ2luLndyb25nQ3JlZGVudGlhbHMiKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"login\">\n    <form @submit=\"submit\">\n      <img :src=\"logoURL\" alt=\"File Browser\" />\n      <h1>{{ name }}</h1>\n      <div v-if=\"error !== ''\" class=\"wrong\">{{ error }}</div>\n\n      <input\n        class=\"input input--block\"\n        type=\"text\"\n        v-model=\"username\"\n        :placeholder=\"$t('login.username')\"\n      />\n      <input\n        class=\"input input--block\"\n        type=\"password\"\n        v-model=\"password\"\n        :placeholder=\"$t('login.password')\"\n      />\n      <input\n        class=\"input input--block\"\n        v-if=\"createMode\"\n        type=\"password\"\n        v-model=\"passwordConfirm\"\n        :placeholder=\"$t('login.passwordConfirm')\"\n      />\n\n      <div v-if=\"recaptcha\" id=\"recaptcha\"></div>\n      <input\n        class=\"button button--block\"\n        type=\"submit\"\n        :value=\"createMode ? $t('login.signup') : $t('login.submit')\"\n      />\n\n      <p\n        @click=\"toggleMode\"\n        v-if=\"signup\"\n      >{{ createMode ? $t('login.loginInstead') : $t('login.createAnAccount') }}</p>\n    </form>\n  </div>\n</template>\n\n<script>\nimport * as auth from \"@/utils/auth\";\nimport {\n  name,\n  logoURL,\n  recaptcha,\n  recaptchaKey,\n  signup\n} from \"@/utils/constants\";\n\nexport default {\n  name: \"login\",\n  computed: {\n    signup: () => signup,\n    name: () => name,\n    logoURL: () => logoURL\n  },\n  data: function() {\n    return {\n      createMode: false,\n      error: \"\",\n      username: \"\",\n      password: \"\",\n      recaptcha: recaptcha,\n      passwordConfirm: \"\"\n    };\n  },\n  mounted() {\n    if (!recaptcha) return;\n\n    window.grecaptcha.render(\"recaptcha\", {\n      sitekey: recaptchaKey\n    });\n  },\n  methods: {\n    toggleMode() {\n      this.createMode = !this.createMode;\n    },\n    async submit(event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      let redirect = this.$route.query.redirect;\n      if (redirect === \"\" || redirect === undefined || redirect === null) {\n        redirect = \"/files/\";\n      }\n\n      let captcha = \"\";\n      if (recaptcha) {\n        captcha = window.grecaptcha.getResponse();\n\n        if (captcha === \"\") {\n          this.error = this.$t(\"login.wrongCredentials\");\n          return;\n        }\n      }\n\n      if (this.createMode) {\n        if (this.password !== this.passwordConfirm) {\n          this.error = this.$t(\"login.passwordsDontMatch\");\n          return;\n        }\n      }\n\n      try {\n        if (this.createMode) {\n          await auth.signup(this.username, this.password);\n        }\n\n        await auth.login(this.username, this.password, captcha);\n        this.$router.push({ path: redirect });\n      } catch (e) {\n        if (e.message == 409) {\n          this.error = this.$t(\"login.usernameTaken\");\n        } else {\n          this.error = this.$t(\"login.wrongCredentials\");\n        }\n      }\n    }\n  }\n};\n</script>\n"]}]}