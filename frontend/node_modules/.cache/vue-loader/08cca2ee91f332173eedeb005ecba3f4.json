{"remainingRequest":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lq/ifb/src/eshop/frontend/src/components/prompts/Download.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lq/ifb/src/eshop/frontend/src/components/prompts/Download.vue","mtime":1583132470976},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwR2V0dGVycywgbWFwU3RhdGV9IGZyb20gJ3Z1ZXgnCmltcG9ydCB7IGZpbGVzIGFzIGFwaSB9IGZyb20gJ0AvYXBpJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdkb3dubG9hZCcsCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcFN0YXRlKFsnc2VsZWN0ZWQnLCAncmVxJ10pLAogICAgLi4ubWFwR2V0dGVycyhbJ3NlbGVjdGVkQ291bnQnXSkKICB9LAogIG1ldGhvZHM6IHsKICAgIGRvd25sb2FkOiBmdW5jdGlvbiAoZm9ybWF0KSB7CiAgICAgIGlmICh0aGlzLnNlbGVjdGVkQ291bnQgPT09IDApIHsKICAgICAgICBhcGkuZG93bmxvYWQoZm9ybWF0LCB0aGlzLiRyb3V0ZS5wYXRoKQogICAgICB9IGVsc2UgewogICAgICAgIGxldCBmaWxlcyA9IFtdCgogICAgICAgIGZvciAobGV0IGkgb2YgdGhpcy5zZWxlY3RlZCkgewogICAgICAgICAgZmlsZXMucHVzaCh0aGlzLnJlcS5pdGVtc1tpXS51cmwpCiAgICAgICAgfQoKICAgICAgICBhcGkuZG93bmxvYWQoZm9ybWF0LCAuLi5maWxlcykKICAgICAgfQoKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdjbG9zZUhvdmVycycpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Download.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"Download.vue","sourceRoot":"src/components/prompts","sourcesContent":["<template>\n  <div class=\"card floating\" id=\"download\">\n    <div class=\"card-title\">\n      <h2>{{ $t('prompts.download') }}</h2>\n    </div>\n\n    <div class=\"card-content\">\n      <p>{{ $t('prompts.downloadMessage') }}</p>\n\n      <button class=\"button button--block\" @click=\"download('zip')\" v-focus>zip</button>\n      <button class=\"button button--block\" @click=\"download('tar')\" v-focus>tar</button>\n      <button class=\"button button--block\" @click=\"download('targz')\" v-focus>tar.gz</button>\n      <button class=\"button button--block\" @click=\"download('tarbz2')\" v-focus>tar.bz2</button>\n      <button class=\"button button--block\" @click=\"download('tarxz')\" v-focus>tar.xz</button>\n      <button class=\"button button--block\" @click=\"download('tarlz4')\" v-focus>tar.lz4</button>\n      <button class=\"button button--block\" @click=\"download('tarsz')\" v-focus>tar.sz</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {mapGetters, mapState} from 'vuex'\nimport { files as api } from '@/api'\n\nexport default {\n  name: 'download',\n  computed: {\n    ...mapState(['selected', 'req']),\n    ...mapGetters(['selectedCount'])\n  },\n  methods: {\n    download: function (format) {\n      if (this.selectedCount === 0) {\n        api.download(format, this.$route.path)\n      } else {\n        let files = []\n\n        for (let i of this.selected) {\n          files.push(this.req.items[i].url)\n        }\n\n        api.download(format, ...files)\n      }\n\n      this.$store.commit('closeHovers')\n    }\n  }\n}\n</script>\n"]}]}