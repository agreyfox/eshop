{"remainingRequest":"/home/lq/ifb/src/eshop/frontend/node_modules/thread-loader/dist/cjs.js!/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js!/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lq/ifb/src/eshop/frontend/src/views/settings/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lq/ifb/src/eshop/frontend/src/views/settings/Profile.vue","mtime":1583132470984},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9scS9pZmIvc3JjL2VzaG9wL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvaG9tZS9scS9pZmIvc3JjL2VzaG9wL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBTdGF0ZSwgbWFwTXV0YXRpb25zIH0gZnJvbSAndnVleCc7CmltcG9ydCB7IHVzZXJzIGFzIGFwaSB9IGZyb20gJ0AvYXBpJzsKaW1wb3J0IExhbmd1YWdlcyBmcm9tICdAL2NvbXBvbmVudHMvc2V0dGluZ3MvTGFuZ3VhZ2VzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdzZXR0aW5ncycsCiAgY29tcG9uZW50czogewogICAgTGFuZ3VhZ2VzOiBMYW5ndWFnZXMKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwYXNzd29yZDogJycsCiAgICAgIHBhc3N3b3JkQ29uZjogJycsCiAgICAgIGxvY2FsZTogJycKICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoWyd1c2VyJ10pLCB7CiAgICBwYXNzd29yZENsYXNzOiBmdW5jdGlvbiBwYXNzd29yZENsYXNzKCkgewogICAgICB2YXIgYmFzZUNsYXNzID0gJ2lucHV0IGlucHV0LS1ibG9jayc7CgogICAgICBpZiAodGhpcy5wYXNzd29yZCA9PT0gJycgJiYgdGhpcy5wYXNzd29yZENvbmYgPT09ICcnKSB7CiAgICAgICAgcmV0dXJuIGJhc2VDbGFzczsKICAgICAgfQoKICAgICAgaWYgKHRoaXMucGFzc3dvcmQgPT09IHRoaXMucGFzc3dvcmRDb25mKSB7CiAgICAgICAgcmV0dXJuICIiLmNvbmNhdChiYXNlQ2xhc3MsICIgaW5wdXQtLWdyZWVuIik7CiAgICAgIH0KCiAgICAgIHJldHVybiAiIi5jb25jYXQoYmFzZUNsYXNzLCAiIGlucHV0LS1yZWQiKTsKICAgIH0KICB9KSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5sb2NhbGUgPSB0aGlzLnVzZXIubG9jYWxlOwogIH0sCiAgbWV0aG9kczogX29iamVjdFNwcmVhZCh7fSwgbWFwTXV0YXRpb25zKFsndXBkYXRlVXNlciddKSwgewogICAgdXBkYXRlUGFzc3dvcmQ6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF91cGRhdGVQYXNzd29yZCA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoZXZlbnQpIHsKICAgICAgICB2YXIgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoKICAgICAgICAgICAgICAgIGlmICghKHRoaXMucGFzc3dvcmQgIT09IHRoaXMucGFzc3dvcmRDb25mIHx8IHRoaXMucGFzc3dvcmQgPT09ICcnKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAzOwogICAgICAgICAgICAgICAgZGF0YSA9IHsKICAgICAgICAgICAgICAgICAgaWQ6IHRoaXMudXNlci5pZCwKICAgICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHRoaXMucGFzc3dvcmQKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkudXBkYXRlKGRhdGEsIFsncGFzc3dvcmQnXSk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlVXNlcihkYXRhKTsKICAgICAgICAgICAgICAgIHRoaXMuJHNob3dTdWNjZXNzKHRoaXMuJHQoJ3NldHRpbmdzLnBhc3N3b3JkVXBkYXRlZCcpKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDExOwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgzKTsKICAgICAgICAgICAgICAgIHRoaXMuJHNob3dFcnJvcihfY29udGV4dC50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzLCBbWzMsIDExXV0pOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiB1cGRhdGVQYXNzd29yZChfeCkgewogICAgICAgIHJldHVybiBfdXBkYXRlUGFzc3dvcmQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHVwZGF0ZVBhc3N3b3JkOwogICAgfSgpLAogICAgdXBkYXRlU2V0dGluZ3M6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF91cGRhdGVTZXR0aW5ncyA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKGV2ZW50KSB7CiAgICAgICAgdmFyIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDE7CiAgICAgICAgICAgICAgICBkYXRhID0gewogICAgICAgICAgICAgICAgICBpZDogdGhpcy51c2VyLmlkLAogICAgICAgICAgICAgICAgICBsb2NhbGU6IHRoaXMubG9jYWxlCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaS51cGRhdGUoZGF0YSwgWydsb2NhbGUnXSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlVXNlcihkYXRhKTsKICAgICAgICAgICAgICAgIHRoaXMuJHNob3dTdWNjZXNzKHRoaXMuJHQoJ3NldHRpbmdzLnNldHRpbmdzVXBkYXRlZCcpKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA5OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgICAgdGhpcy4kc2hvd0Vycm9yKF9jb250ZXh0Mi50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIHRoaXMsIFtbMSwgOV1dKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gdXBkYXRlU2V0dGluZ3MoX3gyKSB7CiAgICAgICAgcmV0dXJuIF91cGRhdGVTZXR0aW5ncy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gdXBkYXRlU2V0dGluZ3M7CiAgICB9KCkKICB9KQp9Ow=="},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,SAAA,QAAA,EAAA,YAAA,QAAA,MAAA;AACA,SAAA,KAAA,IAAA,GAAA,QAAA,OAAA;AACA,OAAA,SAAA,MAAA,iCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GAFA;AAKA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,YAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA;AAHA,KAAA;AAKA,GAXA;AAYA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,MAAA,CAAA,CADA;AAEA,IAAA,aAFA,2BAEA;AACA,UAAA,SAAA,GAAA,oBAAA;;AAEA,UAAA,KAAA,QAAA,KAAA,EAAA,IAAA,KAAA,YAAA,KAAA,EAAA,EAAA;AACA,eAAA,SAAA;AACA;;AAEA,UAAA,KAAA,QAAA,KAAA,KAAA,YAAA,EAAA;AACA,yBAAA,SAAA;AACA;;AAEA,uBAAA,SAAA;AACA;AAdA,IAZA;AA4BA,EAAA,OA5BA,qBA4BA;AACA,SAAA,MAAA,GAAA,KAAA,IAAA,CAAA,MAAA;AACA,GA9BA;AA+BA,EAAA,OAAA,oBACA,YAAA,CAAA,CAAA,YAAA,CAAA,CADA;AAEA,IAAA,cAFA;AAAA;AAAA;AAAA,+CAEA,KAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,gBAAA,KAAA,CAAA,cAAA;;AAHA,sBAKA,KAAA,QAAA,KAAA,KAAA,YAAA,IAAA,KAAA,QAAA,KAAA,EALA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAUA,gBAAA,IAVA,GAUA;AAAA,kBAAA,EAAA,EAAA,KAAA,IAAA,CAAA,EAAA;AAAA,kBAAA,QAAA,EAAA,KAAA;AAAA,iBAVA;AAAA;AAAA,uBAWA,GAAA,CAAA,MAAA,CAAA,IAAA,EAAA,CAAA,UAAA,CAAA,CAXA;;AAAA;AAYA,qBAAA,UAAA,CAAA,IAAA;AACA,qBAAA,YAAA,CAAA,KAAA,EAAA,CAAA,0BAAA,CAAA;AAbA;AAAA;;AAAA;AAAA;AAAA;AAeA,qBAAA,UAAA;;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkBA,IAAA,cAlBA;AAAA;AAAA;AAAA,gDAkBA,KAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA,gBAAA,KAAA,CAAA,cAAA;AAnBA;AAsBA,gBAAA,IAtBA,GAsBA;AAAA,kBAAA,EAAA,EAAA,KAAA,IAAA,CAAA,EAAA;AAAA,kBAAA,MAAA,EAAA,KAAA;AAAA,iBAtBA;AAAA;AAAA,uBAuBA,GAAA,CAAA,MAAA,CAAA,IAAA,EAAA,CAAA,QAAA,CAAA,CAvBA;;AAAA;AAwBA,qBAAA,UAAA,CAAA,IAAA;AACA,qBAAA,YAAA,CAAA,KAAA,EAAA,CAAA,0BAAA,CAAA;AAzBA;AAAA;;AAAA;AAAA;AAAA;AA2BA,qBAAA,UAAA;;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA/BA,CAAA","sourcesContent":["<template>\n  <div class=\"dashboard\">\n     <form class=\"card\" @submit=\"updateSettings\">\n      <div class=\"card-title\">\n        <h2>{{ $t('settings.profileSettings') }}</h2>\n      </div>\n\n      <div class=\"card-content\">\n        <h3>{{ $t('settings.language') }}</h3>\n        <languages class=\"input input--block\" :locale.sync=\"locale\"></languages>\n      </div>\n\n      <div class=\"card-action\">\n        <input class=\"button button--flat\" type=\"submit\" :value=\"$t('buttons.update')\">\n      </div>\n    </form>\n\n    <form class=\"card\" v-if=\"!user.lockPassword\" @submit=\"updatePassword\">\n      <div class=\"card-title\">\n        <h2>{{ $t('settings.changePassword') }}</h2>\n      </div>\n\n      <div class=\"card-content\">\n        <input :class=\"passwordClass\" type=\"password\" :placeholder=\"$t('settings.newPassword')\" v-model=\"password\" name=\"password\">\n        <input :class=\"passwordClass\" type=\"password\" :placeholder=\"$t('settings.newPasswordConfirm')\" v-model=\"passwordConf\" name=\"password\">\n      </div>\n\n      <div class=\"card-action\">\n        <input class=\"button button--flat\" type=\"submit\" :value=\"$t('buttons.update')\">\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex'\nimport { users as api } from '@/api'\nimport Languages from '@/components/settings/Languages'\n\nexport default {\n  name: 'settings',\n  components: {\n    Languages\n  },\n  data: function () {\n    return {\n      password: '',\n      passwordConf: '',\n      locale: ''\n    }\n  },\n  computed: {\n    ...mapState([ 'user' ]),\n    passwordClass () {\n      const baseClass = 'input input--block'\n\n      if (this.password === '' && this.passwordConf === '') {\n        return baseClass\n      }\n\n      if (this.password === this.passwordConf) {\n        return `${baseClass} input--green`\n      }\n\n      return `${baseClass} input--red`\n    }\n  },\n  created () {\n    this.locale = this.user.locale\n  },\n  methods: {\n    ...mapMutations([ 'updateUser' ]),\n    async updatePassword (event) {\n      event.preventDefault()\n\n      if (this.password !== this.passwordConf || this.password === '') {\n        return\n      }\n\n      try {\n        const data = { id: this.user.id, password: this.password }\n        await api.update(data, ['password'])\n        this.updateUser(data)\n        this.$showSuccess(this.$t('settings.passwordUpdated'))\n      } catch (e) {\n        this.$showError(e)\n      }\n    },\n    async updateSettings (event) {\n      event.preventDefault()\n\n      try {\n        const data = { id: this.user.id, locale: this.locale }\n        await api.update(data, ['locale'])\n        this.updateUser(data)\n        this.$showSuccess(this.$t('settings.settingsUpdated'))\n      } catch (e) {\n        this.$showError(e)\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/settings"}]}