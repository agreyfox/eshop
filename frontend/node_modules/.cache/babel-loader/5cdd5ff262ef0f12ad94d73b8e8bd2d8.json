{"remainingRequest":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js!/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lq/ifb/src/eshop/frontend/src/views/settings/Global.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lq/ifb/src/eshop/frontend/src/views/settings/Global.vue","mtime":1583132470984},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Global.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"dashboard\" v-if=\"settings !== null\">\n    <form class=\"card\" @submit.prevent=\"save\">\n      <div class=\"card-title\">\n        <h2>{{ $t('settings.globalSettings') }}</h2>\n      </div>\n\n      <div class=\"card-content\">\n        <p><input type=\"checkbox\" v-model=\"settings.signup\"> {{ $t('settings.allowSignup') }}</p>\n\n        <p><input type=\"checkbox\" v-model=\"settings.createUserDir\"> {{ $t('settings.createUserDir') }}</p>\n\n        <h3>{{ $t('settings.rules') }}</h3>\n        <p class=\"small\">{{ $t('settings.globalRules') }}</p>\n        <rules :rules.sync=\"settings.rules\" />\n\n        <h3>{{ $t('settings.executeOnShell') }}</h3>\n        <p class=\"small\">{{ $t('settings.executeOnShellDescription') }}</p>\n        <input class=\"input input--block\" type=\"text\" placeholder=\"bash -c, cmd /c, ...\" v-model=\"settings.shell\" />\n\n        <h3>{{ $t('settings.branding') }}</h3>\n\n        <i18n path=\"settings.brandingHelp\" tag=\"p\" class=\"small\">\n          <a class=\"link\" target=\"_blank\" href=\"https://filebrowser.xyz/configuration/custom-branding\">{{ $t('settings.documentation') }}</a>\n        </i18n>\n\n        <p>\n          <input type=\"checkbox\" v-model=\"settings.branding.disableExternal\" id=\"branding-links\" />\n          {{ $t('settings.disableExternalLinks') }}\n        </p>\n\n        <p>\n          <label for=\"theme\">{{ $t('settings.themes.title') }}</label>\n          <themes class=\"input input--block\" :theme.sync=\"settings.branding.theme\" id=\"theme\"></themes>\n        </p>\n\n        <p>\n          <label for=\"branding-name\">{{ $t('settings.instanceName') }}</label>\n          <input class=\"input input--block\" type=\"text\" v-model=\"settings.branding.name\" id=\"branding-name\" />\n        </p>\n\n        <p>\n          <label for=\"branding-files\">{{ $t('settings.brandingDirectoryPath') }}</label>\n          <input class=\"input input--block\" type=\"text\" v-model=\"settings.branding.files\" id=\"branding-files\" />\n        </p>\n\n      </div>\n\n      <div class=\"card-action\">\n        <input class=\"button button--flat\" type=\"submit\" :value=\"$t('buttons.update')\">\n      </div>\n    </form>\n\n    <form class=\"card\" @submit.prevent=\"save\">\n      <div class=\"card-title\">\n        <h2>{{ $t('settings.userDefaults') }}</h2>\n      </div>\n\n      <div class=\"card-content\">\n        <p class=\"small\">{{ $t('settings.defaultUserDescription') }}</p>\n\n        <user-form :isNew=\"false\" :isDefault=\"true\" :user.sync=\"settings.defaults\" />\n      </div>\n\n      <div class=\"card-action\">\n        <input class=\"button button--flat\" type=\"submit\" :value=\"$t('buttons.update')\">\n      </div>\n    </form>\n\n    <form class=\"card\" @submit.prevent=\"save\">\n      <div class=\"card-title\">\n        <h2>{{ $t('settings.commandRunner') }}</h2>\n      </div>\n\n      <div class=\"card-content\">\n        <i18n path=\"settings.commandRunnerHelp\" tag=\"p\" class=\"small\">\n          <code>FILE</code>\n          <code>SCOPE</code>\n          <a class=\"link\" target=\"_blank\" href=\"https://filebrowser.xyz/configuration/command-runner\">{{ $t('settings.documentation') }}</a>\n        </i18n>\n\n        <div v-for=\"command in settings.commands\" :key=\"command.name\" class=\"collapsible\">\n          <input :id=\"command.name\" type=\"checkbox\">\n          <label :for=\"command.name\">\n            <p>{{ capitalize(command.name) }}</p>\n            <i class=\"material-icons\">arrow_drop_down</i>\n          </label>\n          <div class=\"collapse\">\n            <textarea class=\"input input--block input--textarea\" v-model.trim=\"command.value\"></textarea>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"card-action\">\n        <input class=\"button button--flat\" type=\"submit\" :value=\"$t('buttons.update')\">\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport { settings as api } from '@/api'\nimport UserForm from '@/components/settings/UserForm'\nimport Rules from '@/components/settings/Rules'\nimport Themes from '@/components/settings/Themes'\n\nexport default {\n  name: 'settings',\n  components: {\n    Themes,\n    UserForm,\n    Rules\n  },\n  data: function () {\n    return {\n      originalSettings: null,\n      settings: null\n    }\n  },\n  computed: {\n    ...mapState([ 'user' ])\n  },\n  async created () {\n    try {\n      const original = await api.get()\n      let settings = { ...original, commands: [] }\n\n      for (const key in original.commands) {\n        settings.commands.push({\n          name: key,\n          value: original.commands[key].join('\\n')\n        })\n      }\n\n      settings.shell = settings.shell.join(' ')\n\n      this.originalSettings = original\n      this.settings = settings\n    } catch (e) {\n      this.$showError(e)\n    }\n  },\n  methods: {\n    capitalize (name, where = '_') {\n      if (where === 'caps') where = /(?=[A-Z])/\n      let splitted = name.split(where)\n      name = ''\n\n      for (let i = 0; i < splitted.length; i++) {\n        name += splitted[i].charAt(0).toUpperCase() + splitted[i].slice(1) + ' '\n      }\n\n      return name.slice(0, -1)\n    },\n    async save () {\n      let settings = {\n        ...this.settings,\n        shell: this.settings.shell.trim().split(' ').filter(s => s !== ''),\n        commands: {}\n      }\n\n      for (const { name, value } of this.settings.commands) {\n        settings.commands[name] = value.split('\\n').filter(cmd => cmd !== '')\n      }\n\n      try {\n        await api.update(settings)\n        this.$showSuccess(this.$t('settings.settingsUpdated'))\n      } catch (e) {\n        this.$showError(e)\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/settings"}]}