{"remainingRequest":"/home/lq/ifb/src/eshop/frontend/node_modules/thread-loader/dist/cjs.js!/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js!/home/lq/ifb/src/eshop/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/lq/ifb/src/eshop/frontend/src/api/users.js","dependencies":[{"path":"/home/lq/ifb/src/eshop/frontend/src/api/users.js","mtime":1583132470972},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvbHEvaWZiL3NyYy9lc2hvcC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCB7IGZldGNoVVJMLCBmZXRjaEpTT04gfSBmcm9tICcuL3V0aWxzJzsKZXhwb3J0IGZ1bmN0aW9uIGdldEFsbCgpIHsKICByZXR1cm4gX2dldEFsbC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfZ2V0QWxsKCkgewogIF9nZXRBbGwgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgZmV0Y2hKU09OKCIvYXBpL3VzZXJzIiwge30pKTsKCiAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwogIHJldHVybiBfZ2V0QWxsLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBnZXQoX3gpIHsKICByZXR1cm4gX2dldC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfZ2V0KCkgewogIF9nZXQgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoaWQpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBmZXRjaEpTT04oIi9hcGkvdXNlcnMvIi5jb25jYXQoaWQpLCB7fSkpOwoKICAgICAgICAgIGNhc2UgMToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTIpOwogIH0pKTsKICByZXR1cm4gX2dldC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpleHBvcnQgZnVuY3Rpb24gY3JlYXRlKF94MikgewogIHJldHVybiBfY3JlYXRlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIF9jcmVhdGUoKSB7CiAgX2NyZWF0ZSA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyh1c2VyKSB7CiAgICB2YXIgcmVzOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyOwogICAgICAgICAgICByZXR1cm4gZmV0Y2hVUkwoIi9hcGkvdXNlcnMiLCB7CiAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAgICAgICAgICAgICAgd2hhdDogJ3VzZXInLAogICAgICAgICAgICAgICAgd2hpY2g6IFtdLAogICAgICAgICAgICAgICAgZGF0YTogdXNlcgogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgcmVzID0gX2NvbnRleHQzLnNlbnQ7CgogICAgICAgICAgICBpZiAoIShyZXMuc3RhdHVzID09PSAyMDEpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA3OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgcmVzLmhlYWRlcnMuZ2V0KCdMb2NhdGlvbicpKTsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihyZXMuc3RhdHVzKTsKCiAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUzKTsKICB9KSk7CiAgcmV0dXJuIF9jcmVhdGUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZShfeDMpIHsKICByZXR1cm4gX3VwZGF0ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfdXBkYXRlKCkgewogIF91cGRhdGUgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQodXNlcikgewogICAgdmFyIHdoaWNoLAogICAgICAgIHJlcywKICAgICAgICBfYXJnczQgPSBhcmd1bWVudHM7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICB3aGljaCA9IF9hcmdzNC5sZW5ndGggPiAxICYmIF9hcmdzNFsxXSAhPT0gdW5kZWZpbmVkID8gX2FyZ3M0WzFdIDogWydhbGwnXTsKICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gZmV0Y2hVUkwoIi9hcGkvdXNlcnMvIi5jb25jYXQodXNlci5pZCksIHsKICAgICAgICAgICAgICBtZXRob2Q6ICdQVVQnLAogICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAgICAgIHdoYXQ6ICd1c2VyJywKICAgICAgICAgICAgICAgIHdoaWNoOiB3aGljaCwKICAgICAgICAgICAgICAgIGRhdGE6IHVzZXIKICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0NC5zZW50OwoKICAgICAgICAgICAgaWYgKCEocmVzLnN0YXR1cyAhPT0gMjAwKSkgewogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNjsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKHJlcy5zdGF0dXMpOwoKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTQpOwogIH0pKTsKICByZXR1cm4gX3VwZGF0ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpleHBvcnQgZnVuY3Rpb24gcmVtb3ZlKF94NCkgewogIHJldHVybiBfcmVtb3ZlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIF9yZW1vdmUoKSB7CiAgX3JlbW92ZSA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNShpZCkgewogICAgdmFyIHJlczsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIGZldGNoVVJMKCIvYXBpL3VzZXJzLyIuY29uY2F0KGlkKSwgewogICAgICAgICAgICAgIG1ldGhvZDogJ0RFTEVURScKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICByZXMgPSBfY29udGV4dDUuc2VudDsKCiAgICAgICAgICAgIGlmICghKHJlcy5zdGF0dXMgIT09IDIwMCkpIHsKICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDU7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihyZXMuc3RhdHVzKTsKCiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU1KTsKICB9KSk7CiAgcmV0dXJuIF9yZW1vdmUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQ=="},{"version":3,"sources":["/home/lq/ifb/src/eshop/frontend/src/api/users.js"],"names":["fetchURL","fetchJSON","getAll","get","id","create","user","method","body","JSON","stringify","what","which","data","res","status","headers","Error","update","remove"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,SAApC;AAEA,gBAAsBC,MAAtB;AAAA;AAAA;;;;;0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA,6CACED,SAAS,eAAe,EAAf,CADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAIP,gBAAsBE,GAAtB;AAAA;AAAA;;;;;0BAAO,kBAAoBC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA,8CACEH,SAAS,sBAAeG,EAAf,GAAqB,EAArB,CADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAIP,gBAAsBC,MAAtB;AAAA;AAAA;;;;;0BAAO,kBAAuBC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaN,QAAQ,eAAe;AACvCO,cAAAA,MAAM,EAAE,MAD+B;AAEvCC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,gBAAAA,IAAI,EAAE,MADa;AAEnBC,gBAAAA,KAAK,EAAE,EAFY;AAGnBC,gBAAAA,IAAI,EAAEP;AAHa,eAAf;AAFiC,aAAf,CADrB;;AAAA;AACCQ,YAAAA,GADD;;AAAA,kBAUDA,GAAG,CAACC,MAAJ,KAAe,GAVd;AAAA;AAAA;AAAA;;AAAA,8CAWID,GAAG,CAACE,OAAJ,CAAYb,GAAZ,CAAgB,UAAhB,CAXJ;;AAAA;AAAA,kBAaG,IAAIc,KAAJ,CAAUH,GAAG,CAACC,MAAd,CAbH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkBP,gBAAsBG,MAAtB;AAAA;AAAA;;;;;0BAAO,kBAAuBZ,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6BM,YAAAA,KAA7B,8DAAqC,CAAC,KAAD,CAArC;AAAA;AAAA,mBACaZ,QAAQ,sBAAeM,IAAI,CAACF,EAApB,GAA0B;AAClDG,cAAAA,MAAM,EAAE,KAD0C;AAElDC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,gBAAAA,IAAI,EAAE,MADa;AAEnBC,gBAAAA,KAAK,EAAEA,KAFY;AAGnBC,gBAAAA,IAAI,EAAEP;AAHa,eAAf;AAF4C,aAA1B,CADrB;;AAAA;AACCQ,YAAAA,GADD;;AAAA,kBAUDA,GAAG,CAACC,MAAJ,KAAe,GAVd;AAAA;AAAA;AAAA;;AAAA,kBAWG,IAAIE,KAAJ,CAAUH,GAAG,CAACC,MAAd,CAXH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeP,gBAAsBI,MAAtB;AAAA;AAAA;;;;;0BAAO,kBAAuBf,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaJ,QAAQ,sBAAeI,EAAf,GAAqB;AAC7CG,cAAAA,MAAM,EAAE;AADqC,aAArB,CADrB;;AAAA;AACCO,YAAAA,GADD;;AAAA,kBAKDA,GAAG,CAACC,MAAJ,KAAe,GALd;AAAA;AAAA;AAAA;;AAAA,kBAMG,IAAIE,KAAJ,CAAUH,GAAG,CAACC,MAAd,CANH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { fetchURL, fetchJSON } from './utils'\n\nexport async function getAll () {\n  return fetchJSON(`/api/users`, {})\n}\n\nexport async function get (id) {\n  return fetchJSON(`/api/users/${id}`, {})\n}\n\nexport async function create (user) {\n  const res = await fetchURL(`/api/users`, {\n    method: 'POST',\n    body: JSON.stringify({\n      what: 'user',\n      which: [],\n      data: user\n    })\n  })\n\n  if (res.status === 201) {\n    return res.headers.get('Location')\n  } else {\n    throw new Error(res.status)\n  }\n\n}\n\nexport async function update (user, which = ['all']) {\n  const res = await fetchURL(`/api/users/${user.id}`, {\n    method: 'PUT',\n    body: JSON.stringify({\n      what: 'user',\n      which: which,\n      data: user\n    })\n  })\n\n  if (res.status !== 200) {\n    throw new Error(res.status)\n  }\n}\n\nexport async function remove (id) {\n  const res = await fetchURL(`/api/users/${id}`, {\n    method: 'DELETE'\n  })\n\n  if (res.status !== 200) {\n    throw new Error(res.status)\n  }\n}\n"]}]}