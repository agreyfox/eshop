{"remainingRequest":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js!/home/lq/ifb/src/eshop/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/lq/ifb/src/eshop/frontend/src/api/utils.js","dependencies":[{"path":"/home/lq/ifb/src/eshop/frontend/src/api/utils.js","mtime":1583132470972},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdGFydHMtd2l0aCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9ob21lL2xxL2lmYi9zcmMvZXNob3AvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICIvaG9tZS9scS9pZmIvc3JjL2VzaG9wL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2xxL2lmYi9zcmMvZXNob3AvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKaW1wb3J0IHN0b3JlIGZyb20gJ0Avc3RvcmUnOwppbXBvcnQgeyByZW5ldyB9IGZyb20gJ0AvdXRpbHMvYXV0aCc7CmltcG9ydCB7IGJhc2VVUkwgfSBmcm9tICdAL3V0aWxzL2NvbnN0YW50cyc7CmV4cG9ydCBmdW5jdGlvbiBmZXRjaFVSTChfeCwgX3gyKSB7CiAgcmV0dXJuIF9mZXRjaFVSTC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfZmV0Y2hVUkwoKSB7CiAgX2ZldGNoVVJMID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUodXJsLCBvcHRzKSB7CiAgICB2YXIgX29wdHMsIGhlYWRlcnMsIHJlc3QsIHJlczsKCiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIG9wdHMgPSBvcHRzIHx8IHt9OwogICAgICAgICAgICBvcHRzLmhlYWRlcnMgPSBvcHRzLmhlYWRlcnMgfHwge307CiAgICAgICAgICAgIF9vcHRzID0gb3B0cywgaGVhZGVycyA9IF9vcHRzLmhlYWRlcnMsIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX29wdHMsIFsiaGVhZGVycyJdKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoYmFzZVVSTCkuY29uY2F0KHVybCksIF9vYmplY3RTcHJlYWQoewogICAgICAgICAgICAgIGhlYWRlcnM6IF9vYmplY3RTcHJlYWQoewogICAgICAgICAgICAgICAgJ1gtQXV0aCc6IHN0b3JlLnN0YXRlLmp3dAogICAgICAgICAgICAgIH0sIGhlYWRlcnMpCiAgICAgICAgICAgIH0sIHJlc3QpKTsKCiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICBpZiAoIShyZXMuaGVhZGVycy5nZXQoJ1gtUmVuZXctVG9rZW4nKSA9PT0gJ3RydWUnKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgcmV0dXJuIHJlbmV3KHN0b3JlLnN0YXRlLmp3dCk7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXMpOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwogIHJldHVybiBfZmV0Y2hVUkwuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIGZldGNoSlNPTihfeDMsIF94NCkgewogIHJldHVybiBfZmV0Y2hKU09OLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIF9mZXRjaEpTT04oKSB7CiAgX2ZldGNoSlNPTiA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMih1cmwsIG9wdHMpIHsKICAgIHZhciByZXM7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgIHJldHVybiBmZXRjaFVSTCh1cmwsIG9wdHMpOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICBpZiAoIShyZXMuc3RhdHVzID09PSAyMDApKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA3OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgcmVzLmpzb24oKSk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IocmVzLnN0YXR1cyk7CgogICAgICAgICAgY2FzZSA4OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMik7CiAgfSkpOwogIHJldHVybiBfZmV0Y2hKU09OLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmV4cG9ydCBmdW5jdGlvbiByZW1vdmVQcmVmaXgodXJsKSB7CiAgaWYgKHVybC5zdGFydHNXaXRoKCcvZmlsZXMnKSkgewogICAgdXJsID0gdXJsLnNsaWNlKDYpOwogIH0KCiAgaWYgKHVybCA9PT0gJycpIHVybCA9ICcvJzsKICBpZiAodXJsWzBdICE9PSAnLycpIHVybCA9ICcvJyArIHVybDsKICByZXR1cm4gdXJsOwp9"},{"version":3,"sources":["/home/lq/ifb/src/eshop/frontend/src/api/utils.js"],"names":["store","renew","baseURL","fetchURL","url","opts","headers","rest","fetch","state","jwt","res","get","fetchJSON","status","json","Error","removePrefix","startsWith","slice"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,gBAAsBC,QAAtB;AAAA;AAAA;;;;;0BAAO,iBAAyBC,GAAzB,EAA8BC,IAA9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLA,YAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACAA,YAAAA,IAAI,CAACC,OAAL,GAAeD,IAAI,CAACC,OAAL,IAAgB,EAA/B;AAFK,oBAIsBD,IAJtB,EAICC,OAJD,SAICA,OAJD,EAIaC,IAJb;AAAA;AAAA,mBAMaC,KAAK,WAAIN,OAAJ,SAAcE,GAAd;AACrBE,cAAAA,OAAO;AACL,0BAAUN,KAAK,CAACS,KAAN,CAAYC;AADjB,iBAEFJ,OAFE;AADc,eAKlBC,IALkB,EANlB;;AAAA;AAMCI,YAAAA,GAND;;AAAA,kBAcDA,GAAG,CAACL,OAAJ,CAAYM,GAAZ,CAAgB,eAAhB,MAAqC,MAdpC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAeGX,KAAK,CAACD,KAAK,CAACS,KAAN,CAAYC,GAAb,CAfR;;AAAA;AAAA,6CAkBEC,GAlBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAqBP,gBAAsBE,SAAtB;AAAA;AAAA;;;;;0BAAO,kBAA0BT,GAA1B,EAA+BC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaF,QAAQ,CAACC,GAAD,EAAMC,IAAN,CADrB;;AAAA;AACCM,YAAAA,GADD;;AAAA,kBAGDA,GAAG,CAACG,MAAJ,KAAe,GAHd;AAAA;AAAA;AAAA;;AAAA,8CAIIH,GAAG,CAACI,IAAJ,EAJJ;;AAAA;AAAA,kBAMG,IAAIC,KAAJ,CAAUL,GAAG,CAACG,MAAd,CANH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAUP,OAAO,SAASG,YAAT,CAAuBb,GAAvB,EAA4B;AACjC,MAAIA,GAAG,CAACc,UAAJ,CAAe,QAAf,CAAJ,EAA8B;AAC5Bd,IAAAA,GAAG,GAAGA,GAAG,CAACe,KAAJ,CAAU,CAAV,CAAN;AACD;;AAED,MAAIf,GAAG,KAAK,EAAZ,EAAgBA,GAAG,GAAG,GAAN;AAChB,MAAIA,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoBA,GAAG,GAAG,MAAMA,GAAZ;AACpB,SAAOA,GAAP;AACD","sourcesContent":["import store from '@/store'\nimport { renew } from '@/utils/auth'\nimport { baseURL } from '@/utils/constants'\n\nexport async function fetchURL (url, opts) {\n  opts = opts || {}\n  opts.headers = opts.headers || {}\n\n  let { headers, ...rest } = opts\n\n  const res = await fetch(`${baseURL}${url}`, {\n    headers: {\n      'X-Auth': store.state.jwt,\n      ...headers\n    },\n    ...rest\n  })\n\n  if (res.headers.get('X-Renew-Token') === 'true') {\n    await renew(store.state.jwt)\n  }\n\n  return res\n}\n\nexport async function fetchJSON (url, opts) {\n  const res = await fetchURL(url, opts)\n\n  if (res.status === 200) {\n    return res.json()\n  } else {\n    throw new Error(res.status)\n  }\n}\n\nexport function removePrefix (url) {\n  if (url.startsWith('/files')) {\n    url = url.slice(6)\n  }\n\n  if (url === '') url = '/'\n  if (url[0] !== '/') url = '/' + url\n  return url\n}\n\n"]}]}