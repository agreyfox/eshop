{"remainingRequest":"/home/lq/ifb/src/eshop/frontend/node_modules/thread-loader/dist/cjs.js!/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js!/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lq/ifb/src/eshop/frontend/src/components/Shell.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lq/ifb/src/eshop/frontend/src/components/Shell.vue","mtime":1583132470972},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0tZW5kIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL2hvbWUvbHEvaWZiL3NyYy9lc2hvcC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwTXV0YXRpb25zLCBtYXBTdGF0ZSwgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgeyBjb21tYW5kcyB9IGZyb20gJ0AvYXBpJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdzaGVsbCcsCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKFsndXNlcicsICdzaG93U2hlbGwnXSksIHt9LCBtYXBHZXR0ZXJzKFsnaXNGaWxlcycsICdpc0xvZ2dlZCddKSwgewogICAgcGF0aDogZnVuY3Rpb24gcGF0aCgpIHsKICAgICAgaWYgKHRoaXMuaXNGaWxlcykgewogICAgICAgIHJldHVybiB0aGlzLiRyb3V0ZS5wYXRoOwogICAgICB9CgogICAgICByZXR1cm4gJyc7CiAgICB9CiAgfSksCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbnRlbnQ6IFtdLAogICAgICBoaXN0b3J5OiBbXSwKICAgICAgaGlzdG9yeVBvczogMCwKICAgICAgY2FuSW5wdXQ6IHRydWUKICAgIH07CiAgfSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBNdXRhdGlvbnMoWyd0b2dnbGVTaGVsbCddKSwgewogICAgc2Nyb2xsOiBmdW5jdGlvbiBzY3JvbGwoKSB7CiAgICAgIHRoaXMuJHJlZnMuc2Nyb2xsYWJsZS5zY3JvbGxUb3AgPSB0aGlzLiRyZWZzLnNjcm9sbGFibGUuc2Nyb2xsSGVpZ2h0OwogICAgfSwKICAgIGZvY3VzOiBmdW5jdGlvbiBmb2N1cygpIHsKICAgICAgdGhpcy4kcmVmcy5pbnB1dC5mb2N1cygpOwogICAgfSwKICAgIGhpc3RvcnlVcDogZnVuY3Rpb24gaGlzdG9yeVVwKCkgewogICAgICBpZiAodGhpcy5oaXN0b3J5UG9zID4gMCkgewogICAgICAgIHRoaXMuJHJlZnMuaW5wdXQuaW5uZXJUZXh0ID0gdGhpcy5oaXN0b3J5Wy0tdGhpcy5oaXN0b3J5UG9zXTsKICAgICAgICB0aGlzLmZvY3VzKCk7CiAgICAgIH0KICAgIH0sCiAgICBoaXN0b3J5RG93bjogZnVuY3Rpb24gaGlzdG9yeURvd24oKSB7CiAgICAgIGlmICh0aGlzLmhpc3RvcnlQb3MgPj0gMCAmJiB0aGlzLmhpc3RvcnlQb3MgPCB0aGlzLmhpc3RvcnkubGVuZ3RoIC0gMSkgewogICAgICAgIHRoaXMuJHJlZnMuaW5wdXQuaW5uZXJUZXh0ID0gdGhpcy5oaXN0b3J5WysrdGhpcy5oaXN0b3J5UG9zXTsKICAgICAgICB0aGlzLmZvY3VzKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5oaXN0b3J5UG9zID0gdGhpcy5oaXN0b3J5Lmxlbmd0aDsKICAgICAgICB0aGlzLiRyZWZzLmlucHV0LmlubmVyVGV4dCA9ICcnOwogICAgICB9CiAgICB9LAogICAgc3VibWl0OiBmdW5jdGlvbiBzdWJtaXQoZXZlbnQpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBjbWQgPSBldmVudC50YXJnZXQuaW5uZXJUZXh0LnRyaW0oKTsKCiAgICAgIGlmIChjbWQgPT09ICcnKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAoY21kID09PSAnY2xlYXInKSB7CiAgICAgICAgdGhpcy5jb250ZW50ID0gW107CiAgICAgICAgZXZlbnQudGFyZ2V0LmlubmVySFRNTCA9ICcnOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaWYgKGNtZCA9PT0gJ2V4aXQnKSB7CiAgICAgICAgZXZlbnQudGFyZ2V0LmlubmVySFRNTCA9ICcnOwogICAgICAgIHRoaXMudG9nZ2xlU2hlbGwoKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuY2FuSW5wdXQgPSBmYWxzZTsKICAgICAgZXZlbnQudGFyZ2V0LmlubmVySFRNTCA9ICcnOwogICAgICB2YXIgcmVzdWx0cyA9IHsKICAgICAgICB0ZXh0OiAiIi5jb25jYXQoY21kLCAiXG5cbiIpCiAgICAgIH07CiAgICAgIHRoaXMuaGlzdG9yeS5wdXNoKGNtZCk7CiAgICAgIHRoaXMuaGlzdG9yeVBvcyA9IHRoaXMuaGlzdG9yeS5sZW5ndGg7CiAgICAgIHRoaXMuY29udGVudC5wdXNoKHJlc3VsdHMpOwogICAgICBjb21tYW5kcyh0aGlzLnBhdGgsIGNtZCwgZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgcmVzdWx0cy50ZXh0ICs9ICIiLmNvbmNhdChldmVudC5kYXRhLCAiXG4iKTsKCiAgICAgICAgX3RoaXMuc2Nyb2xsKCk7CiAgICAgIH0sIGZ1bmN0aW9uICgpIHsKICAgICAgICByZXN1bHRzLnRleHQgPSByZXN1bHRzLnRleHQudHJpbUVuZCgpOwogICAgICAgIF90aGlzLmNhbklucHV0ID0gdHJ1ZTsKCiAgICAgICAgX3RoaXMuJHJlZnMuaW5wdXQuZm9jdXMoKTsKCiAgICAgICAgX3RoaXMuc2Nyb2xsKCk7CiAgICAgIH0pOwogICAgfQogIH0pCn07"},{"version":3,"sources":["Shell.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div @click=\"focus\" class=\"shell\" ref=\"scrollable\" :class=\"{ ['shell--hidden']: !showShell}\">\n    <div v-for=\"(c, index) in content\" :key=\"index\" class=\"shell__result\" >\n      <div class=\"shell__prompt\"><i class=\"material-icons\">chevron_right</i></div>\n      <pre class=\"shell__text\">{{ c.text }}</pre>\n    </div>\n\n    <div class=\"shell__result\" :class=\"{ 'shell__result--hidden': !canInput }\" >\n      <div class=\"shell__prompt\"><i class=\"material-icons\">chevron_right</i></div>\n      <pre\n        tabindex=\"0\"\n        ref=\"input\"\n        class=\"shell__text\"\n        contenteditable=\"true\"\n        @keydown.prevent.38=\"historyUp\"\n        @keydown.prevent.40=\"historyDown\"\n        @keypress.prevent.enter=\"submit\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapMutations, mapState, mapGetters } from 'vuex'\nimport { commands } from '@/api'\n\nexport default {\n  name: 'shell',\n  computed: {\n    ...mapState([ 'user', 'showShell' ]),\n    ...mapGetters([ 'isFiles', 'isLogged' ]),\n    path: function () {\n      if (this.isFiles) {\n        return this.$route.path\n      }\n\n      return ''\n    }\n  },\n  data: () => ({\n    content: [],\n    history: [],\n    historyPos: 0,\n    canInput: true\n  }),\n  methods: {\n    ...mapMutations([ 'toggleShell' ]),\n    scroll: function () {\n      this.$refs.scrollable.scrollTop = this.$refs.scrollable.scrollHeight\n    },\n    focus: function () {\n      this.$refs.input.focus()\n    },\n    historyUp () {\n      if (this.historyPos > 0) {\n        this.$refs.input.innerText = this.history[--this.historyPos]\n        this.focus()\n      }\n    },\n    historyDown () {\n      if (this.historyPos >= 0 && this.historyPos < this.history.length - 1) {\n        this.$refs.input.innerText = this.history[++this.historyPos]\n        this.focus()\n      } else {\n        this.historyPos = this.history.length\n        this.$refs.input.innerText = ''\n      }\n    },\n    submit: function (event) {\n      const cmd = event.target.innerText.trim()\n\n      if (cmd === '') {\n        return\n      }\n\n      if (cmd === 'clear') {\n        this.content = []\n        event.target.innerHTML = ''\n        return\n      }\n\n      if (cmd === 'exit') {\n        event.target.innerHTML = ''\n        this.toggleShell()\n        return\n      }\n\n      this.canInput = false\n      event.target.innerHTML = ''\n\n      let results = {\n        text: `${cmd}\\n\\n`\n      }\n      \n      this.history.push(cmd)\n      this.historyPos = this.history.length\n      this.content.push(results)\n\n      commands(\n        this.path,\n        cmd,\n        event => {\n          results.text += `${event.data}\\n`\n          this.scroll()\n        },\n        () => {\n          results.text = results.text.trimEnd()\n          this.canInput = true\n          this.$refs.input.focus()\n          this.scroll()\n        }\n      )\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}