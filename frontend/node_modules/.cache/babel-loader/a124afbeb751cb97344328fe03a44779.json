{"remainingRequest":"/home/lq/ifb/src/eshop/frontend/node_modules/thread-loader/dist/cjs.js!/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js!/home/lq/ifb/src/eshop/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/lq/ifb/src/eshop/frontend/src/utils/auth.js","dependencies":[{"path":"/home/lq/ifb/src/eshop/frontend/src/utils/auth.js","mtime":1583132470980},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9scS9pZmIvc3JjL2VzaG9wL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IHN0b3JlIGZyb20gJ0Avc3RvcmUnOwppbXBvcnQgcm91dGVyIGZyb20gJ0Avcm91dGVyJzsKaW1wb3J0IHsgQmFzZTY0IH0gZnJvbSAnanMtYmFzZTY0JzsKaW1wb3J0IHsgYmFzZVVSTCB9IGZyb20gJ0AvdXRpbHMvY29uc3RhbnRzJzsKZXhwb3J0IGZ1bmN0aW9uIHBhcnNlVG9rZW4odG9rZW4pIHsKICB2YXIgcGFydHMgPSB0b2tlbi5zcGxpdCgnLicpOwoKICBpZiAocGFydHMubGVuZ3RoICE9PSAzKSB7CiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Rva2VuIG1hbGZvcm1lZCcpOwogIH0KCiAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKEJhc2U2NC5kZWNvZGUocGFydHNbMV0pKTsKCiAgaWYgKE1hdGgucm91bmQobmV3IERhdGUoKS5nZXRUaW1lKCkgLyAxMDAwKSA+IGRhdGEuZXhwKSB7CiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Rva2VuIGV4cGlyZWQnKTsKICB9CgogIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdqd3QnLCB0b2tlbik7CiAgc3RvcmUuY29tbWl0KCdzZXRKV1QnLCB0b2tlbik7CiAgc3RvcmUuY29tbWl0KCdzZXRVc2VyJywgZGF0YS51c2VyKTsKfQpleHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVMb2dpbigpIHsKICByZXR1cm4gX3ZhbGlkYXRlTG9naW4uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX3ZhbGlkYXRlTG9naW4oKSB7CiAgX3ZhbGlkYXRlTG9naW4gPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CgogICAgICAgICAgICBpZiAoIWxvY2FsU3RvcmFnZS5nZXRJdGVtKCdqd3QnKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgcmV0dXJuIHJlbmV3KGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdqd3QnKSk7CgogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNjsKICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgY29uc29sZS53YXJuKCdJbnZhbGlkIEpXVCB0b2tlbiBpbiBzdG9yYWdlJyk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCA2XV0pOwogIH0pKTsKICByZXR1cm4gX3ZhbGlkYXRlTG9naW4uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIGxvZ2luKF94LCBfeDIsIF94MykgewogIHJldHVybiBfbG9naW4uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX2xvZ2luKCkgewogIF9sb2dpbiA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMih1c2VybmFtZSwgcGFzc3dvcmQsIHJlY2FwdGNoYSkgewogICAgdmFyIGRhdGEsIHJlcywgYm9keTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGRhdGEgPSB7CiAgICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLAogICAgICAgICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZCwKICAgICAgICAgICAgICByZWNhcHRjaGE6IHJlY2FwdGNoYQogICAgICAgICAgICB9OwogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoYmFzZVVSTCwgIi9hcGkvbG9naW4iKSwgewogICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNjsKICAgICAgICAgICAgcmV0dXJuIHJlcy50ZXh0KCk7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBib2R5ID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICBpZiAoIShyZXMuc3RhdHVzID09PSAyMDApKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcGFyc2VUb2tlbihib2R5KTsKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMjsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGJvZHkpOwoKICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUyKTsKICB9KSk7CiAgcmV0dXJuIF9sb2dpbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpleHBvcnQgZnVuY3Rpb24gcmVuZXcoX3g0KSB7CiAgcmV0dXJuIF9yZW5ldy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfcmVuZXcoKSB7CiAgX3JlbmV3ID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKGp3dCkgewogICAgdmFyIHJlcywgYm9keTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIGZldGNoKCIiLmNvbmNhdChiYXNlVVJMLCAiL2FwaS9yZW5ldyIpLCB7CiAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgJ1gtQXV0aCc6IGp3dAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICByZXMgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA1OwogICAgICAgICAgICByZXR1cm4gcmVzLnRleHQoKTsKCiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGJvZHkgPSBfY29udGV4dDMuc2VudDsKCiAgICAgICAgICAgIGlmICghKHJlcy5zdGF0dXMgPT09IDIwMCkpIHsKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDEwOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBwYXJzZVRva2VuKGJvZHkpOwogICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDExOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYm9keSk7CgogICAgICAgICAgY2FzZSAxMToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTMpOwogIH0pKTsKICByZXR1cm4gX3JlbmV3LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBzaWdudXAoX3g1LCBfeDYpIHsKICByZXR1cm4gX3NpZ251cC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfc2lnbnVwKCkgewogIF9zaWdudXAgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQodXNlcm5hbWUsIHBhc3N3b3JkKSB7CiAgICB2YXIgZGF0YSwgcmVzOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgZGF0YSA9IHsKICAgICAgICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsCiAgICAgICAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGZldGNoKCIiLmNvbmNhdChiYXNlVVJMLCAiL2FwaS9zaWdudXAiKSwgewogICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzID0gX2NvbnRleHQ0LnNlbnQ7CgogICAgICAgICAgICBpZiAoIShyZXMuc3RhdHVzICE9PSAyMDApKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA2OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IocmVzLnN0YXR1cyk7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlNCk7CiAgfSkpOwogIHJldHVybiBfc2lnbnVwLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBsb2dvdXQoKSB7CiAgc3RvcmUuY29tbWl0KCdzZXRKV1QnLCAnJyk7CiAgc3RvcmUuY29tbWl0KCdzZXRVc2VyJywgbnVsbCk7CiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2p3dCcsIG51bGwpOwogIHJvdXRlci5wdXNoKHsKICAgIHBhdGg6ICcvbG9naW4nCiAgfSk7Cn0="},{"version":3,"sources":["/home/lq/ifb/src/eshop/frontend/src/utils/auth.js"],"names":["store","router","Base64","baseURL","parseToken","token","parts","split","length","Error","data","JSON","parse","decode","Math","round","Date","getTime","exp","localStorage","setItem","commit","user","validateLogin","getItem","renew","console","warn","login","username","password","recaptcha","fetch","method","headers","body","stringify","res","text","status","jwt","signup","logout","push","path"],"mappings":"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","sourcesContent":["import store from '@/store'\nimport router from '@/router'\nimport { Base64 } from 'js-base64'\nimport { baseURL } from '@/utils/constants'\n\nexport function parseToken (token) {\n  const parts = token.split('.')\n\n  if (parts.length !== 3) {\n    throw new Error('token malformed')\n  }\n\n  const data = JSON.parse(Base64.decode(parts[1]))\n\n  if (Math.round(new Date().getTime() / 1000) > data.exp) {\n    throw new Error('token expired')\n  }\n\n  localStorage.setItem('jwt', token)\n  store.commit('setJWT', token)\n  store.commit('setUser', data.user)\n}\n\nexport async function validateLogin () {\n  try {\n    if (localStorage.getItem('jwt')) {\n      await renew(localStorage.getItem('jwt'))\n    }\n  } catch (_) {\n    console.warn('Invalid JWT token in storage') // eslint-disable-line\n  }\n}\n\nexport async function login (username, password, recaptcha) {\n  const data = { username, password, recaptcha }\n\n  const res = await fetch(`${baseURL}/api/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n\n  const body = await res.text()\n\n  if (res.status === 200) {\n    parseToken(body)\n  } else {\n    throw new Error(body)\n  }\n}\n\nexport async function renew (jwt) {\n  const res = await fetch(`${baseURL}/api/renew`, {\n    method: 'POST',\n    headers: {\n      'X-Auth': jwt,\n    }\n  })\n\n  const body = await res.text()\n\n  if (res.status === 200) {\n    parseToken(body)\n  } else {\n    throw new Error(body)\n  }\n}\n\nexport async function signup (username, password) {\n  const data = { username, password }\n\n  const res = await fetch(`${baseURL}/api/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n\n  if (res.status !== 200) {\n    throw new Error(res.status)\n  }\n}\n\nexport function logout () {\n  store.commit('setJWT', '')\n  store.commit('setUser', null)\n  localStorage.setItem('jwt', null)\n  router.push({path: '/login'})\n}\n"]}]}