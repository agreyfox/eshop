{"remainingRequest":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js!/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lq/ifb/src/eshop/frontend/src/views/settings/User.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lq/ifb/src/eshop/frontend/src/views/settings/User.vue","mtime":1583132470984},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["User.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <form v-if=\"loaded\" @submit=\"save\" class=\"card\">\n      <div class=\"card-title\">\n        <h2 v-if=\"user.id === 0\">{{ $t('settings.newUser') }}</h2>\n        <h2 v-else>{{ $t('settings.user') }} {{ user.username }}</h2>\n      </div>\n\n      <div class=\"card-content\">\n        <user-form :user.sync=\"user\" :isDefault=\"false\" :isNew=\"isNew\" />\n      </div>\n\n      <div class=\"card-action\">\n        <button\n          v-if=\"!isNew\"\n          @click.prevent=\"deletePrompt\"\n          type=\"button\"\n          class=\"button button--flat button--red\"\n          :aria-label=\"$t('buttons.delete')\"\n          :title=\"$t('buttons.delete')\">{{ $t('buttons.delete') }}</button>\n        <input\n          class=\"button button--flat\"\n          type=\"submit\"\n          :value=\"$t('buttons.save')\">\n      </div>\n    </form>\n\n    <div v-if=\"$store.state.show === 'deleteUser'\" class=\"card floating\">\n      <div class=\"card-content\">\n        <p>Are you sure you want to delete this user?</p>\n      </div>\n\n      <div class=\"card-action\">\n        <button class=\"button button--flat button--grey\"\n          @click=\"closeHovers\"\n          v-focus\n          :aria-label=\"$t('buttons.cancel')\"\n          :title=\"$t('buttons.cancel')\">\n          {{ $t('buttons.cancel') }}\n        </button>\n        <button class=\"button button--flat\"\n          @click=\"deleteUser\">\n          {{ $t('buttons.delete') }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapMutations } from 'vuex'\nimport { users as api, settings } from '@/api'\nimport UserForm from '@/components/settings/UserForm'\nimport deepClone from 'lodash.clonedeep'\n\nexport default {\n  name: 'user',\n  components: {\n    UserForm\n  },\n  data: () => {\n    return {\n      originalUser: null,\n      user: {},\n      loaded: false\n    }\n  },\n  created () {\n    this.fetchData()\n  },\n  computed: {\n    isNew () {\n      return this.$route.path === '/settings/users/new'\n    }\n  },\n  watch: {\n    '$route': 'fetchData',\n    'user.perm.admin': function () {\n      if (!this.user.perm.admin) return\n      this.user.lockPassword = false\n    }\n  },\n  methods: {\n    ...mapMutations([ 'closeHovers', 'showHover', 'setUser' ]),\n    async fetchData () {\n      try {\n        if (this.isNew) {\n          let { defaults } = await settings.get()\n          this.user = {\n            ...defaults,\n            username: '',\n            passsword: '',\n            rules: [],\n            lockPassword: false,\n            id: 0\n          }\n        } else {\n          const id = this.$route.params.pathMatch\n          this.user = { ...await api.get(id) }\n        }\n\n        this.loaded = true\n      } catch (e) {\n        this.$router.push({ path: '/settings/users/new' })\n      }\n    },\n    deletePrompt () {\n      this.showHover('deleteUser')\n    },\n    async deleteUser (event) {\n      event.preventDefault()\n\n      try {\n        await api.remove(this.user.id)\n        this.$router.push({ path: '/settings/users' })\n        this.$showSuccess(this.$t('settings.userDeleted'))\n      } catch (e) {\n        this.$showError(e)\n      }\n    },\n    async save (event) {\n      event.preventDefault()\n      let user = {\n        ...this.originalUser,\n        ...this.user\n      }\n\n      try {\n        if (this.isNew) {\n          const loc = await api.create(user)\n          this.$router.push({ path: loc })\n          this.$showSuccess(this.$t('settings.userCreated'))\n        } else {\n          await api.update(user)\n\n          if (user.id === this.$store.state.user.id) {\n            this.setUser({ ...deepClone(user) })\n          }\n\n          this.$showSuccess(this.$t('settings.userUpdated'))\n        }\n      } catch (e) {\n        this.$showError(e)\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/settings"}]}