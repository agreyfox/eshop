{"remainingRequest":"/home/lq/ifb/src/eshop/frontend/node_modules/thread-loader/dist/cjs.js!/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js!/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lq/ifb/src/eshop/frontend/src/components/prompts/NewDir.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lq/ifb/src/eshop/frontend/src/components/prompts/NewDir.vue","mtime":1583132470976},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2xxL2lmYi9zcmMvZXNob3AvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9ob21lL2xxL2lmYi9zcmMvZXNob3AvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgZmlsZXMgYXMgYXBpIH0gZnJvbSAnQC9hcGknOwppbXBvcnQgdXJsIGZyb20gJ0AvdXRpbHMvdXJsJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICduZXctZGlyJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbmFtZTogJycKICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycyhbJ2lzRmlsZXMnLCAnaXNMaXN0aW5nJ10pKSwKICBtZXRob2RzOiB7CiAgICBzdWJtaXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9zdWJtaXQgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGV2ZW50KSB7CiAgICAgICAgdmFyIHVyaTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoKICAgICAgICAgICAgICAgIGlmICghKHRoaXMubmV3ID09PSAnJykpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAvLyBCdWlsZCB0aGUgcGF0aCBvZiB0aGUgbmV3IGRpcmVjdG9yeS4KICAgICAgICAgICAgICAgIHVyaSA9IHRoaXMuaXNGaWxlcyA/IHRoaXMuJHJvdXRlLnBhdGggKyAnLycgOiAnLyc7CgogICAgICAgICAgICAgICAgaWYgKCF0aGlzLmlzTGlzdGluZykgewogICAgICAgICAgICAgICAgICB1cmkgPSB1cmwucmVtb3ZlTGFzdERpcih1cmkpICsgJy8nOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHVyaSArPSBlbmNvZGVVUklDb21wb25lbnQodGhpcy5uYW1lKSArICcvJzsKICAgICAgICAgICAgICAgIHVyaSA9IHVyaS5yZXBsYWNlKCcvLycsICcvJyk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNzsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMDsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkucG9zdCh1cmkpOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgICBwYXRoOiB1cmkKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE2OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTM7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDcpOwogICAgICAgICAgICAgICAgdGhpcy4kc2hvd0Vycm9yKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnY2xvc2VIb3ZlcnMnKTsKCiAgICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMsIFtbNywgMTNdXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHN1Ym1pdChfeCkgewogICAgICAgIHJldHVybiBfc3VibWl0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBzdWJtaXQ7CiAgICB9KCkKICB9Cn07"},{"version":3,"sources":["NewDir.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,SAAA,UAAA,QAAA,MAAA;AACA,SAAA,KAAA,IAAA,GAAA,QAAA,OAAA;AACA,OAAA,GAAA,MAAA,aAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,QAAA,oBACA,UAAA,CAAA,CAAA,SAAA,EAAA,WAAA,CAAA,CADA,CAPA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA;AAAA;AAAA;AAAA,8BAAA,iBAAA,KAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,cAAA;;AADA,sBAEA,KAAA,GAAA,KAAA,EAFA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIA;AACA,gBAAA,GALA,GAKA,KAAA,OAAA,GAAA,KAAA,MAAA,CAAA,IAAA,GAAA,GAAA,GAAA,GALA;;AAOA,oBAAA,CAAA,KAAA,SAAA,EAAA;AACA,kBAAA,GAAA,GAAA,GAAA,CAAA,aAAA,CAAA,GAAA,IAAA,GAAA;AACA;;AAEA,gBAAA,GAAA,IAAA,kBAAA,CAAA,KAAA,IAAA,CAAA,GAAA,GAAA;AACA,gBAAA,GAAA,GAAA,GAAA,CAAA,OAAA,CAAA,IAAA,EAAA,GAAA,CAAA;AAZA;AAAA;AAAA,uBAeA,GAAA,CAAA,IAAA,CAAA,GAAA,CAfA;;AAAA;AAgBA,qBAAA,OAAA,CAAA,IAAA,CAAA;AAAA,kBAAA,IAAA,EAAA;AAAA,iBAAA;AAhBA;AAAA;;AAAA;AAAA;AAAA;AAkBA,qBAAA,UAAA;;AAlBA;AAqBA,qBAAA,MAAA,CAAA,MAAA,CAAA,aAAA;;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADA;AAVA,CAAA","sourcesContent":["<template>\n  <div class=\"card floating\">\n    <div class=\"card-title\">\n      <h2>{{ $t('prompts.newDir') }}</h2>\n    </div>\n\n    <div class=\"card-content\">\n      <p>{{ $t('prompts.newDirMessage') }}</p>\n      <input class=\"input input--block\" type=\"text\" @keyup.enter=\"submit\" v-model.trim=\"name\" v-focus>\n    </div>\n\n    <div class=\"card-action\">\n      <button\n        class=\"button button--flat button--grey\"\n        @click=\"$store.commit('closeHovers')\"\n        :aria-label=\"$t('buttons.cancel')\"\n        :title=\"$t('buttons.cancel')\"\n      >{{ $t('buttons.cancel') }}</button>\n      <button\n        class=\"button button--flat\"\n        :aria-label=\"$t('buttons.create')\"\n        :title=\"$t('buttons.create')\"\n        @click=\"submit\"\n      >{{ $t('buttons.create') }}</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport { files as api } from '@/api'\nimport url from '@/utils/url'\n\nexport default {\n  name: 'new-dir',\n  data: function() {\n    return {\n      name: ''\n    };\n  },\n  computed: {\n    ...mapGetters([ 'isFiles', 'isListing' ])\n  },\n  methods: {\n    submit: async function(event) {\n      event.preventDefault()\n      if (this.new === '') return\n\n      // Build the path of the new directory.\n      let uri = this.isFiles ? this.$route.path + '/' : '/'\n\n      if (!this.isListing) {\n        uri = url.removeLastDir(uri) + '/'\n      }\n\n      uri += encodeURIComponent(this.name) + '/'\n      uri = uri.replace('//', '/')\n\n      try {\n        await api.post(uri)\n        this.$router.push({ path: uri })\n      } catch (e) {\n        this.$showError(e)\n      }\n\n      this.$store.commit('closeHovers')\n    }\n  }\n};\n</script>\n\n"],"sourceRoot":"src/components/prompts"}]}