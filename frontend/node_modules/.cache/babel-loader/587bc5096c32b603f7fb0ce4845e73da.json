{"remainingRequest":"/home/lq/ifb/src/eshop/frontend/node_modules/thread-loader/dist/cjs.js!/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js!/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lq/ifb/src/eshop/frontend/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lq/ifb/src/eshop/frontend/src/views/Login.vue","mtime":1585553815963},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvbHEvaWZiL3NyYy9lc2hvcC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCAqIGFzIGF1dGggZnJvbSAiQC91dGlscy9hdXRoIjsKaW1wb3J0IHsgbmFtZSBhcyBfbmFtZSwgbG9nb1VSTCBhcyBfbG9nb1VSTCwgcmVjYXB0Y2hhLCByZWNhcHRjaGFLZXksIHNpZ251cCBhcyBfc2lnbnVwIH0gZnJvbSAiQC91dGlscy9jb25zdGFudHMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImxvZ2luIiwKICBjb21wdXRlZDogewogICAgc2lnbnVwOiBmdW5jdGlvbiBzaWdudXAoKSB7CiAgICAgIHJldHVybiBfc2lnbnVwOwogICAgfSwKICAgIG5hbWU6IGZ1bmN0aW9uIG5hbWUoKSB7CiAgICAgIHJldHVybiBfbmFtZTsKICAgIH0sCiAgICBsb2dvVVJMOiBmdW5jdGlvbiBsb2dvVVJMKCkgewogICAgICByZXR1cm4gX2xvZ29VUkw7CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY3JlYXRlTW9kZTogZmFsc2UsCiAgICAgIGVycm9yOiAiIiwKICAgICAgdXNlcm5hbWU6ICIiLAogICAgICBwYXNzd29yZDogIiIsCiAgICAgIHJlY2FwdGNoYTogcmVjYXB0Y2hhLAogICAgICBwYXNzd29yZENvbmZpcm06ICIiCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIGlmICghcmVjYXB0Y2hhKSByZXR1cm47CiAgICB3aW5kb3cuZ3JlY2FwdGNoYS5yZW5kZXIoInJlY2FwdGNoYSIsIHsKICAgICAgc2l0ZWtleTogcmVjYXB0Y2hhS2V5CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHRvZ2dsZU1vZGU6IGZ1bmN0aW9uIHRvZ2dsZU1vZGUoKSB7CiAgICAgIHRoaXMuY3JlYXRlTW9kZSA9ICF0aGlzLmNyZWF0ZU1vZGU7CiAgICB9LAogICAgc3VibWl0OiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfc3VibWl0ID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShldmVudCkgewogICAgICAgIHZhciByZWRpcmVjdCwgY2FwdGNoYTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICAgICAgICAgICAgICByZWRpcmVjdCA9IHRoaXMuJHJvdXRlLnF1ZXJ5LnJlZGlyZWN0OwoKICAgICAgICAgICAgICAgIGlmIChyZWRpcmVjdCA9PT0gIiIgfHwgcmVkaXJlY3QgPT09IHVuZGVmaW5lZCB8fCByZWRpcmVjdCA9PT0gbnVsbCkgewogICAgICAgICAgICAgICAgICByZWRpcmVjdCA9ICIvZmlsZXMvIjsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjYXB0Y2hhID0gIiI7CgogICAgICAgICAgICAgICAgaWYgKCFyZWNhcHRjaGEpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjYXB0Y2hhID0gd2luZG93LmdyZWNhcHRjaGEuZ2V0UmVzcG9uc2UoKTsKCiAgICAgICAgICAgICAgICBpZiAoIShjYXB0Y2hhID09PSAiIikpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB0aGlzLmVycm9yID0gdGhpcy4kdCgibG9naW4ud3JvbmdDcmVkZW50aWFscyIpOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuY3JlYXRlTW9kZSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmICghKHRoaXMucGFzc3dvcmQgIT09IHRoaXMucGFzc3dvcmRDb25maXJtKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IgPSB0aGlzLiR0KCJsb2dpbi5wYXNzd29yZHNEb250TWF0Y2giKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE0OwoKICAgICAgICAgICAgICAgIGlmICghdGhpcy5jcmVhdGVNb2RlKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxODsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE4OwogICAgICAgICAgICAgICAgcmV0dXJuIGF1dGguc2lnbnVwKHRoaXMudXNlcm5hbWUsIHRoaXMucGFzc3dvcmQpOwoKICAgICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIwOwogICAgICAgICAgICAgICAgcmV0dXJuIGF1dGgubG9naW4odGhpcy51c2VybmFtZSwgdGhpcy5wYXNzd29yZCwgY2FwdGNoYSk7CgogICAgICAgICAgICAgIGNhc2UgMjA6CiAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICAgICAgICAgIHBhdGg6IHJlZGlyZWN0CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyNjsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDIzOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDIzOwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgxNCk7CgogICAgICAgICAgICAgICAgaWYgKF9jb250ZXh0LnQwLm1lc3NhZ2UgPT0gNDA5KSB7CiAgICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IgPSB0aGlzLiR0KCJsb2dpbi51c2VybmFtZVRha2VuIik7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICB0aGlzLmVycm9yID0gdGhpcy4kdCgibG9naW4ud3JvbmdDcmVkZW50aWFscyIpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDI2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcywgW1sxNCwgMjNdXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHN1Ym1pdChfeCkgewogICAgICAgIHJldHVybiBfc3VibWl0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBzdWJtaXQ7CiAgICB9KCkKICB9Cn07"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,OAAA,KAAA,IAAA,MAAA,cAAA;AACA,SACA,IAAA,IAAA,KADA,EAEA,OAAA,IAAA,QAFA,EAGA,SAHA,EAIA,YAJA,EAKA,MAAA,IAAA,OALA,QAMA,mBANA;AAQA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,QAAA,EAAA;AACA,IAAA,MAAA,EAAA;AAAA,aAAA,OAAA;AAAA,KADA;AAEA,IAAA,IAAA,EAAA;AAAA,aAAA,KAAA;AAAA,KAFA;AAGA,IAAA,OAAA,EAAA;AAAA,aAAA,QAAA;AAAA;AAHA,GAFA;AAOA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA,EAJA;AAKA,MAAA,SAAA,EAAA,SALA;AAMA,MAAA,eAAA,EAAA;AANA,KAAA;AAQA,GAhBA;AAiBA,EAAA,OAjBA,qBAiBA;AACA,QAAA,CAAA,SAAA,EAAA;AAEA,IAAA,MAAA,CAAA,UAAA,CAAA,MAAA,CAAA,WAAA,EAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GAvBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,WAAA,UAAA,GAAA,CAAA,KAAA,UAAA;AACA,KAHA;AAIA,IAAA,MAJA;AAAA;AAAA;AAAA,+CAIA,KAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,gBAAA,KAAA,CAAA,cAAA;AACA,gBAAA,KAAA,CAAA,eAAA;AAEA,gBAAA,QARA,GAQA,KAAA,MAAA,CAAA,KAAA,CAAA,QARA;;AASA,oBAAA,QAAA,KAAA,EAAA,IAAA,QAAA,KAAA,SAAA,IAAA,QAAA,KAAA,IAAA,EAAA;AACA,kBAAA,QAAA,GAAA,SAAA;AACA;;AAEA,gBAAA,OAbA,GAaA,EAbA;;AAAA,qBAcA,SAdA;AAAA;AAAA;AAAA;;AAeA,gBAAA,OAAA,GAAA,MAAA,CAAA,UAAA,CAAA,WAAA,EAAA;;AAfA,sBAiBA,OAAA,KAAA,EAjBA;AAAA;AAAA;AAAA;;AAkBA,qBAAA,KAAA,GAAA,KAAA,EAAA,CAAA,wBAAA,CAAA;AAlBA;;AAAA;AAAA,qBAuBA,KAAA,UAvBA;AAAA;AAAA;AAAA;;AAAA,sBAwBA,KAAA,QAAA,KAAA,KAAA,eAxBA;AAAA;AAAA;AAAA;;AAyBA,qBAAA,KAAA,GAAA,KAAA,EAAA,CAAA,0BAAA,CAAA;AAzBA;;AAAA;AAAA;;AAAA,qBA+BA,KAAA,UA/BA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAgCA,IAAA,CAAA,MAAA,CAAA,KAAA,QAAA,EAAA,KAAA,QAAA,CAhCA;;AAAA;AAAA;AAAA,uBAmCA,IAAA,CAAA,KAAA,CAAA,KAAA,QAAA,EAAA,KAAA,QAAA,EAAA,OAAA,CAnCA;;AAAA;AAoCA,qBAAA,OAAA,CAAA,IAAA,CAAA;AAAA,kBAAA,IAAA,EAAA;AAAA,iBAAA;AApCA;AAAA;;AAAA;AAAA;AAAA;;AAsCA,oBAAA,YAAA,OAAA,IAAA,GAAA,EAAA;AACA,uBAAA,KAAA,GAAA,KAAA,EAAA,CAAA,qBAAA,CAAA;AACA,iBAFA,MAEA;AACA,uBAAA,KAAA,GAAA,KAAA,EAAA,CAAA,wBAAA,CAAA;AACA;;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAxBA,CAAA","sourcesContent":["<template>\n  <div id=\"login\">\n    <form @submit=\"submit\">\n      <img :src=\"logoURL\" alt=\"File Browser\" />\n      <h1>{{ name }}</h1>\n      <div v-if=\"error !== ''\" class=\"wrong\">{{ error }}</div>\n\n      <input\n        class=\"input input--block\"\n        type=\"text\"\n        v-model=\"username\"\n        :placeholder=\"$t('login.username')\"\n      />\n      <input\n        class=\"input input--block\"\n        type=\"password\"\n        v-model=\"password\"\n        :placeholder=\"$t('login.password')\"\n      />\n      <input\n        class=\"input input--block\"\n        v-if=\"createMode\"\n        type=\"password\"\n        v-model=\"passwordConfirm\"\n        :placeholder=\"$t('login.passwordConfirm')\"\n      />\n\n      <div v-if=\"recaptcha\" id=\"recaptcha\"></div>\n      <input\n        class=\"button button--block\"\n        type=\"submit\"\n        :value=\"createMode ? $t('login.signup') : $t('login.submit')\"\n      />\n\n      <p\n        @click=\"toggleMode\"\n        v-if=\"signup\"\n      >{{ createMode ? $t('login.loginInstead') : $t('login.createAnAccount') }}</p>\n    </form>\n  </div>\n</template>\n\n<script>\nimport * as auth from \"@/utils/auth\";\nimport {\n  name,\n  logoURL,\n  recaptcha,\n  recaptchaKey,\n  signup\n} from \"@/utils/constants\";\n\nexport default {\n  name: \"login\",\n  computed: {\n    signup: () => signup,\n    name: () => name,\n    logoURL: () => logoURL\n  },\n  data: function() {\n    return {\n      createMode: false,\n      error: \"\",\n      username: \"\",\n      password: \"\",\n      recaptcha: recaptcha,\n      passwordConfirm: \"\"\n    };\n  },\n  mounted() {\n    if (!recaptcha) return;\n\n    window.grecaptcha.render(\"recaptcha\", {\n      sitekey: recaptchaKey\n    });\n  },\n  methods: {\n    toggleMode() {\n      this.createMode = !this.createMode;\n    },\n    async submit(event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      let redirect = this.$route.query.redirect;\n      if (redirect === \"\" || redirect === undefined || redirect === null) {\n        redirect = \"/files/\";\n      }\n\n      let captcha = \"\";\n      if (recaptcha) {\n        captcha = window.grecaptcha.getResponse();\n\n        if (captcha === \"\") {\n          this.error = this.$t(\"login.wrongCredentials\");\n          return;\n        }\n      }\n\n      if (this.createMode) {\n        if (this.password !== this.passwordConfirm) {\n          this.error = this.$t(\"login.passwordsDontMatch\");\n          return;\n        }\n      }\n\n      try {\n        if (this.createMode) {\n          await auth.signup(this.username, this.password);\n        }\n\n        await auth.login(this.username, this.password, captcha);\n        this.$router.push({ path: redirect });\n      } catch (e) {\n        if (e.message == 409) {\n          this.error = this.$t(\"login.usernameTaken\");\n        } else {\n          this.error = this.$t(\"login.wrongCredentials\");\n        }\n      }\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/views"}]}