{"remainingRequest":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js!/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lq/ifb/src/eshop/frontend/src/components/prompts/Rename.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lq/ifb/src/eshop/frontend/src/components/prompts/Rename.vue","mtime":1583132470976},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lq/ifb/src/eshop/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvbHEvaWZiL3NyYy9lc2hvcC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL2hvbWUvbHEvaWZiL3NyYy9lc2hvcC9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwU3RhdGUsIG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHVybCBmcm9tICdAL3V0aWxzL3VybCc7CmltcG9ydCB7IGZpbGVzIGFzIGFwaSB9IGZyb20gJ0AvYXBpJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdyZW5hbWUnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBuYW1lOiAnJwogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLm5hbWUgPSB0aGlzLm9sZE5hbWUoKTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBTdGF0ZShbJ3JlcScsICdzZWxlY3RlZCcsICdzZWxlY3RlZENvdW50J10pLCB7fSwgbWFwR2V0dGVycyhbJ2lzTGlzdGluZyddKSksCiAgbWV0aG9kczogewogICAgY2FuY2VsOiBmdW5jdGlvbiBjYW5jZWwoKSB7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnY2xvc2VIb3ZlcnMnKTsKICAgIH0sCiAgICBvbGROYW1lOiBmdW5jdGlvbiBvbGROYW1lKCkgewogICAgICBpZiAoIXRoaXMuaXNMaXN0aW5nKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucmVxLm5hbWU7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLnNlbGVjdGVkQ291bnQgPT09IDAgfHwgdGhpcy5zZWxlY3RlZENvdW50ID4gMSkgewogICAgICAgIC8vIFRoaXMgc2hvdWxkbid0IGhhcHBlbi4KICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLnJlcS5pdGVtc1t0aGlzLnNlbGVjdGVkWzBdXS5uYW1lOwogICAgfSwKICAgIHN1Ym1pdDogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3N1Ym1pdCA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIG9sZExpbmssIG5ld0xpbms7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgb2xkTGluayA9ICcnOwogICAgICAgICAgICAgICAgbmV3TGluayA9ICcnOwoKICAgICAgICAgICAgICAgIGlmICghdGhpcy5pc0xpc3RpbmcpIHsKICAgICAgICAgICAgICAgICAgb2xkTGluayA9IHRoaXMucmVxLnVybDsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIG9sZExpbmsgPSB0aGlzLnJlcS5pdGVtc1t0aGlzLnNlbGVjdGVkWzBdXS51cmw7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgbmV3TGluayA9IHVybC5yZW1vdmVMYXN0RGlyKG9sZExpbmspICsgJy8nICsgZW5jb2RlVVJJQ29tcG9uZW50KHRoaXMubmFtZSk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5tb3ZlKFt7CiAgICAgICAgICAgICAgICAgIGZyb206IG9sZExpbmssCiAgICAgICAgICAgICAgICAgIHRvOiBuZXdMaW5rCiAgICAgICAgICAgICAgICB9XSk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzTGlzdGluZykgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICAgICAgcGF0aDogbmV3TGluawogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2V0UmVsb2FkJywgdHJ1ZSk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMzsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oNCk7CiAgICAgICAgICAgICAgICB0aGlzLiRzaG93RXJyb3IoX2NvbnRleHQudDApOwoKICAgICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdjbG9zZUhvdmVycycpOwoKICAgICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcywgW1s0LCAxM11dKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gc3VibWl0KCkgewogICAgICAgIHJldHVybiBfc3VibWl0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBzdWJtaXQ7CiAgICB9KCkKICB9Cn07"},{"version":3,"sources":["Rename.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAAA,QAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,GAAA,MAAA,aAAA;AACA,SAAA,KAAA,IAAA,GAAA,QAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAPA,qBAOA;AACA,SAAA,IAAA,GAAA,KAAA,OAAA,EAAA;AACA,GATA;AAUA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,KAAA,EAAA,UAAA,EAAA,eAAA,CAAA,CADA,MAEA,UAAA,CAAA,CAAA,WAAA,CAAA,CAFA,CAVA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,EAAA,kBAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,aAAA;AACA,KAHA;AAIA,IAAA,OAAA,EAAA,mBAAA;AACA,UAAA,CAAA,KAAA,SAAA,EAAA;AACA,eAAA,KAAA,GAAA,CAAA,IAAA;AACA;;AAEA,UAAA,KAAA,aAAA,KAAA,CAAA,IAAA,KAAA,aAAA,GAAA,CAAA,EAAA;AACA;AACA;AACA;;AAEA,aAAA,KAAA,GAAA,CAAA,KAAA,CAAA,KAAA,QAAA,CAAA,CAAA,CAAA,EAAA,IAAA;AACA,KAfA;AAgBA,IAAA,MAAA;AAAA;AAAA;AAAA,8BAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OADA,GACA,EADA;AAEA,gBAAA,OAFA,GAEA,EAFA;;AAIA,oBAAA,CAAA,KAAA,SAAA,EAAA;AACA,kBAAA,OAAA,GAAA,KAAA,GAAA,CAAA,GAAA;AACA,iBAFA,MAEA;AACA,kBAAA,OAAA,GAAA,KAAA,GAAA,CAAA,KAAA,CAAA,KAAA,QAAA,CAAA,CAAA,CAAA,EAAA,GAAA;AACA;;AAEA,gBAAA,OAAA,GAAA,GAAA,CAAA,aAAA,CAAA,OAAA,IAAA,GAAA,GAAA,kBAAA,CAAA,KAAA,IAAA,CAAA;AAVA;AAAA;AAAA,uBAaA,GAAA,CAAA,IAAA,CAAA,CAAA;AAAA,kBAAA,IAAA,EAAA,OAAA;AAAA,kBAAA,EAAA,EAAA;AAAA,iBAAA,CAAA,CAbA;;AAAA;AAAA,oBAcA,KAAA,SAdA;AAAA;AAAA;AAAA;;AAeA,qBAAA,OAAA,CAAA,IAAA,CAAA;AAAA,kBAAA,IAAA,EAAA;AAAA,iBAAA;AAfA;;AAAA;AAmBA,qBAAA,MAAA,CAAA,MAAA,CAAA,WAAA,EAAA,IAAA;AAnBA;AAAA;;AAAA;AAAA;AAAA;AAqBA,qBAAA,UAAA;;AArBA;AAwBA,qBAAA,MAAA,CAAA,MAAA,CAAA,aAAA;;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAhBA;AAdA,CAAA","sourcesContent":["<template>\n  <div class=\"card floating\">\n    <div class=\"card-title\">\n      <h2>{{ $t('prompts.rename') }}</h2>\n    </div>\n\n    <div class=\"card-content\">\n      <p>{{ $t('prompts.renameMessage') }} <code>{{ oldName() }}</code>:</p>\n      <input class=\"input input--block\" v-focus type=\"text\" @keyup.enter=\"submit\" v-model.trim=\"name\">\n    </div>\n\n    <div class=\"card-action\">\n      <button class=\"button button--flat button--grey\"\n        @click=\"$store.commit('closeHovers')\"\n        :aria-label=\"$t('buttons.cancel')\"\n        :title=\"$t('buttons.cancel')\">{{ $t('buttons.cancel') }}</button>\n      <button @click=\"submit\"\n        class=\"button button--flat\"\n        type=\"submit\"\n        :aria-label=\"$t('buttons.rename')\"\n        :title=\"$t('buttons.rename')\">{{ $t('buttons.rename') }}</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters } from 'vuex'\nimport url from '@/utils/url'\nimport { files as api } from '@/api'\n\nexport default {\n  name: 'rename',\n  data: function () {\n    return {\n      name: ''\n    }\n  },\n  created () {\n    this.name = this.oldName()\n  },\n  computed: {\n    ...mapState(['req', 'selected', 'selectedCount']),\n    ...mapGetters(['isListing'])\n  },\n  methods: {\n    cancel: function () {\n      this.$store.commit('closeHovers')\n    },\n    oldName: function () {\n      if (!this.isListing) {\n        return this.req.name\n      }\n\n      if (this.selectedCount === 0 || this.selectedCount > 1) {\n        // This shouldn't happen.\n        return\n      }\n\n      return this.req.items[this.selected[0]].name\n    },\n    submit: async function () {\n      let oldLink = ''\n      let newLink = ''\n\n      if (!this.isListing) {\n        oldLink = this.req.url\n      } else {\n        oldLink = this.req.items[this.selected[0]].url\n      }\n\n      newLink = url.removeLastDir(oldLink) + '/' + encodeURIComponent(this.name)\n\n      try {\n        await api.move([{ from: oldLink, to: newLink }])\n        if (!this.isListing) {\n          this.$router.push({ path: newLink })\n          return\n        }\n\n        this.$store.commit('setReload', true)\n      } catch (e) {\n        this.$showError(e)\n      }\n\n      this.$store.commit('closeHovers')\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components/prompts"}]}